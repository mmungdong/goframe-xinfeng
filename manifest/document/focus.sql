use focus;

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for gf_category
-- ----------------------------
DROP TABLE IF EXISTS `gf_category`;
CREATE TABLE `gf_category`  (
                                `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '分类ID，自增主键',
                                `content_type` char(10)  NOT NULL COMMENT '内容类型：topic, ask, article, reply',
                                `key` varchar(45)  NULL DEFAULT NULL COMMENT '栏目唯一键名，用于程序部分场景硬编码，一般不会用得到',
                                `parent_id` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '父级分类ID，用于层级管理',
                                `user_id` int(10) UNSIGNED NOT NULL COMMENT '创建的用户ID',
                                `name` varchar(45)  NOT NULL COMMENT '分类名称',
                                `sort` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '排序，数值越低越靠前，默认为添加时的时间戳，可用于置顶',
                                `thumb` varchar(255)  NULL DEFAULT NULL COMMENT '封面图',
                                `brief` varchar(9000)  NULL DEFAULT NULL COMMENT '简述',
                                `content` mediumtext  NULL COMMENT '详细介绍',
                                `created_at` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
                                `updated_at` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
                                PRIMARY KEY (`id`) USING BTREE,
                                INDEX `key`(`key`) USING BTREE,
                                INDEX `content_type`(`content_type`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 15  COMMENT = '栏目列表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gf_category
-- ----------------------------
INSERT INTO `gf_category` VALUES (1, 'topic', '', 0, 1, '随聊', 0, NULL, NULL, '', '2020-06-04 00:03:48', '2020-06-04 00:03:55');
INSERT INTO `gf_category` VALUES (2, 'ask', '', 0, 1, 'BUG反馈', 0, NULL, NULL, NULL, '2020-06-04 00:04:37', '2020-06-04 00:04:41');
INSERT INTO `gf_category` VALUES (3, 'topic', '', 1, 1, 'TopicCat2', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (4, 'topic', '', 3, 1, 'TopicCat3', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (5, 'ask', NULL, 2, 1, 'AskCat2', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (6, 'topic', NULL, 0, 1, '翻译', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (7, 'topic', NULL, 0, 1, '分享', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (9, 'article', NULL, 0, 1, '文章分享', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (10, 'article', NULL, 0, 1, '源码解读', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (11, 'article', NULL, 0, 1, '技术架构', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (12, 'topic', NULL, 0, 1, '招聘', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (13, 'ask', NULL, 0, 1, '我要问问', 0, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `gf_category` VALUES (14, 'ask', NULL, 0, 1, 'VIP问答', 0, NULL, NULL, NULL, NULL, NULL);

-- ----------------------------
-- Table structure for gf_content
-- ----------------------------
DROP TABLE IF EXISTS `gf_content`;
CREATE TABLE `gf_content`  (
   `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '自增ID',
   `key` varchar(45)  NULL DEFAULT '' COMMENT '唯一键名，用于程序硬编码，一般不常用',
   `type` char(10)  NOT NULL COMMENT '内容模型: topic, ask, article等，具体由程序定义',
   `category_id` int(10) UNSIGNED NOT NULL COMMENT '栏目ID',
   `user_id` int(10) UNSIGNED NOT NULL COMMENT '用户ID',
   `adopted_reply_id` int(10) UNSIGNED NULL DEFAULT NULL COMMENT '采纳的回复ID，问答模块有效',
   `title` varchar(255)  NOT NULL COMMENT '标题',
   `content` mediumtext  NOT NULL COMMENT '内容',
   `sort` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '排序，数值越低越靠前，默认为添加时的时间戳，可用于置顶',
   `brief` varchar(255)  NULL DEFAULT NULL COMMENT '摘要',
   `thumb` varchar(255)  NULL DEFAULT NULL COMMENT '缩略图',
   `tags` varchar(900)  NULL DEFAULT NULL COMMENT '标签名称列表，以JSON存储',
   `referer` varchar(255)  NULL DEFAULT NULL COMMENT '内容来源，例如github/gitee',
   `status` smallint(5) UNSIGNED NULL DEFAULT 0 COMMENT '状态 0: 正常, 1: 禁用',
   `reply_count` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '回复数量',
   `view_count` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '浏览数量',
   `zan_count` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '赞',
   `cai_count` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '踩',
   `created_at` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
   `updated_at` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
   PRIMARY KEY (`id`) USING BTREE,
   INDEX `key`(`key`) USING BTREE,
   INDEX `updated_at`(`updated_at`) USING BTREE,
   INDEX `view_count`(`view_count`) USING BTREE,
   INDEX `zan_count`(`zan_count`) USING BTREE,
   INDEX `type_category_id`(`type`, `category_id`) USING BTREE,
   INDEX `idx_content_user_id`(`user_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 46927  COMMENT = '问答列表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gf_content
-- ----------------------------
INSERT INTO `gf_content` VALUES (23, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:17:56', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (24, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:17:58', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (25, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:17:58', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (26, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:17:59', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (27, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:00', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (28, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:00', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (29, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:01', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (30, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:02', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (31, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:02', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (32, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:03', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (33, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:04', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (34, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:04', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (35, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:05', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (36, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:06', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (37, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:06', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (38, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (39, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:10', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (40, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:10', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (41, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:11', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (42, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:12', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (43, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:12', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (44, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:13', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (45, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:14', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (46, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:15', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (47, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:17', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (48, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:17', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (49, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:18', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (50, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:19', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (51, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:20', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (52, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:20', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (53, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:21', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (54, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:22', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (55, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:23', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (56, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:23', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (57, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:24', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (58, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:25', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (59, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:25', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (60, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:26', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (61, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:27', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (62, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:28', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (63, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:28', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (64, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:29', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (65, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:30', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (66, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:30', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (67, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:18:31', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (68, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:19:19', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (69, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:19:21', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (70, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:19:21', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (71, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:19:22', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (72, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:19:23', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (73, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:19:24', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (74, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (75, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (76, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (77, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (78, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (79, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (80, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (81, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (82, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (83, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (84, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (85, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (86, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (87, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (88, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (89, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (90, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (91, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (92, NULL, 'topic', 6, 1, NULL, '哈哈哈哈哈GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 23:23:52');
INSERT INTO `gf_content` VALUES (93, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (94, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (95, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (96, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (97, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (98, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (99, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (100, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (101, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (102, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (103, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (104, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (105, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (106, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (107, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (108, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (109, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (110, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (111, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (112, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (113, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (114, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (115, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (116, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (117, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (118, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (119, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (120, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (121, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (122, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (123, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (124, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (125, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (126, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (127, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (128, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (129, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (130, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (131, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (132, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (133, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (134, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (135, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (136, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (137, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (138, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (139, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (140, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (141, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (142, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (143, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (144, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (145, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (146, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (147, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (148, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (149, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (150, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (151, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (152, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (153, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (154, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (155, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (156, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (157, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (158, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (159, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (160, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (161, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (162, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (163, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (164, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (165, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (166, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (167, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (168, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (169, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (170, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (171, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (172, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (173, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:20:07', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (174, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', '测试', 0, '', '', 'null', '', 0, NULL, 58, 1, 1, '2020-11-10 10:20:07', '2021-01-01 22:53:10');
INSERT INTO `gf_content` VALUES (10007, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10008, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10009, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10010, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10011, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10012, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10013, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10014, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10015, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10016, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10017, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10018, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10019, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10020, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10021, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10022, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10023, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10024, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10025, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10026, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10027, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10028, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10029, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10030, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10031, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10032, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10033, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10034, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10035, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10036, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10037, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10038, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10039, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10040, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10041, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10042, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10043, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10044, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10045, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10046, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10047, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10048, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10049, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10050, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10051, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10052, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10053, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10054, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10055, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10056, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10057, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10058, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10059, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10060, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10061, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10062, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10063, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10064, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10065, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10066, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (10067, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10068, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10069, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10070, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10071, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10072, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10073, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10074, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10075, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10076, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10077, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10078, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10079, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10080, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10081, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10082, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10083, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10084, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10085, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10086, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10087, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10088, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10089, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10090, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10091, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10092, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10093, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10094, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10095, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10096, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10097, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10098, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10099, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10100, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10101, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10102, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10103, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10104, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10105, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:46', '2020-11-10 23:03:46');
INSERT INTO `gf_content` VALUES (10106, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 5, 0, 0, '2020-11-10 23:03:46', '2020-11-18 19:23:19');
INSERT INTO `gf_content` VALUES (10112, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10113, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10114, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10115, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10116, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10117, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10118, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10119, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10120, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10121, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10122, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10123, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10124, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10125, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10126, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10127, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10128, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10129, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10130, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10131, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10132, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10133, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10134, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10135, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10136, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10137, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10138, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10139, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10140, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10141, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10142, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10143, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10144, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10145, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10146, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10147, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10148, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10149, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10150, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10151, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10152, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10153, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10154, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10155, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10156, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10157, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10158, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10159, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10160, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (10161, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10162, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10163, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10164, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10165, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10166, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10167, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10168, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10169, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10170, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10171, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10172, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10173, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10174, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 31, 0, 0, '2020-11-10 23:04:01', '2020-11-15 00:09:15');
INSERT INTO `gf_content` VALUES (10175, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10176, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10177, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10178, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10179, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10180, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10181, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10182, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10183, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10184, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10185, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10186, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10187, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10188, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10189, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10190, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10191, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10192, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10193, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10194, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10195, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10196, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10197, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10198, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10199, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10200, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10201, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10202, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10203, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10204, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10205, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10206, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10207, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10208, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10209, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:01', '2020-11-10 23:04:01');
INSERT INTO `gf_content` VALUES (10210, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 6, 0, 0, '2020-11-10 23:04:01', '2020-11-15 23:25:55');
INSERT INTO `gf_content` VALUES (10216, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10217, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10218, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10219, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10220, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10221, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10222, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10223, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10224, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10225, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10226, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10227, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10228, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10229, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10230, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10231, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10232, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10233, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10234, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10235, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10236, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10237, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10238, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10239, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10240, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10241, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10242, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10243, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10244, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10245, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10246, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10247, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10248, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10249, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10250, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10251, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10252, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10253, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10254, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10255, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10256, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10257, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10258, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10259, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10260, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10261, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10262, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10263, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10264, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10265, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10266, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10267, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10268, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10269, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10270, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10271, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10272, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10273, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10274, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10275, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10276, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10277, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10278, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10279, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10280, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10281, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10282, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10283, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10284, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10285, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10286, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10287, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10288, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10289, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10290, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10291, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10292, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10293, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10294, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10295, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10296, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10297, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10298, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10299, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10300, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10301, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10302, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10303, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10304, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10305, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10306, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 23:04:09', '2020-11-14 18:02:19');
INSERT INTO `gf_content` VALUES (10307, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10308, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10309, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10310, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10311, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10312, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (10313, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 23:04:09', '2020-12-31 00:06:53');
INSERT INTO `gf_content` VALUES (10314, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', '测试', 0, '', '', 'null', '', 0, NULL, 11, 0, 0, '2020-11-10 23:04:09', '2020-12-31 00:16:20');
INSERT INTO `gf_content` VALUES (10318, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10319, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10320, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10321, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10322, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10323, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10324, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10325, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10326, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10327, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10328, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10329, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (10330, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10331, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10332, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10333, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10334, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10335, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10336, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10337, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10338, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10339, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10340, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10341, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10342, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10343, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10344, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10345, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10346, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10347, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10348, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10349, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10350, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10351, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10352, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10353, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10354, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10355, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10356, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10357, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10358, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10359, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10360, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10361, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10362, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10363, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10364, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10365, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10366, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10367, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10368, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10369, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10370, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10371, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10372, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10373, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10374, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10375, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10376, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10377, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10378, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10379, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10380, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10381, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10382, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10383, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10384, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10385, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10386, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10387, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10388, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10389, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10390, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10391, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10392, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10393, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10394, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10395, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10396, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10397, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10398, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10399, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10400, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10401, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:54', '2020-11-10 23:06:54');
INSERT INTO `gf_content` VALUES (10402, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10403, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10404, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10405, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10406, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10407, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10408, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10409, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10410, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10411, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10412, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10413, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10414, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10415, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10416, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:55', '2020-11-10 23:06:55');
INSERT INTO `gf_content` VALUES (10417, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 23:06:55', '2020-11-17 00:22:13');
INSERT INTO `gf_content` VALUES (10418, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '测试', 0, '', '', 'null', '', 0, NULL, 3, 0, 0, '2020-11-10 23:06:55', '2020-12-30 00:07:55');
INSERT INTO `gf_content` VALUES (10424, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10425, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10426, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10427, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10428, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10429, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10430, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10431, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10432, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10433, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10434, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10435, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10436, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10437, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10438, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10439, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10440, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10441, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10442, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10443, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10444, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10445, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10446, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10447, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10448, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10449, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10450, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10451, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10452, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10453, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10454, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10455, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10456, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10457, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10458, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10459, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10460, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10461, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10462, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10463, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10464, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10465, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10466, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10467, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10468, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (10528, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10529, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10530, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10531, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10532, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10533, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10534, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10535, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10536, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10537, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10538, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10539, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10540, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10541, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10542, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10543, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10544, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10545, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10546, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10547, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10548, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10549, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10550, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10551, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10552, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10553, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10554, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10555, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10556, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10557, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10558, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10559, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10560, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10561, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10562, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10563, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10564, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10565, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10566, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10567, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10568, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10569, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10570, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10571, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10572, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10573, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10574, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10575, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10576, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10577, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10578, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10579, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10580, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10581, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10582, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10583, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10584, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10585, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10586, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10587, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10588, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10589, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10590, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10591, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10592, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10593, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10594, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10595, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10596, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10597, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10598, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10599, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10600, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10601, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10602, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10603, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10604, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10605, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10606, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10607, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10608, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10609, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10610, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10611, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10612, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10613, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10614, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10615, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10616, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10617, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10618, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10619, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10620, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10621, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10622, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10623, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10624, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (10625, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 3, 0, 0, '2020-11-10 23:08:35', '2020-11-18 19:23:04');
INSERT INTO `gf_content` VALUES (10626, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', '测试', 0, '', '', 'null', '', 0, NULL, 58, 0, 0, '2020-11-10 23:08:35', '2020-11-16 23:54:16');
INSERT INTO `gf_content` VALUES (10632, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10633, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10634, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10635, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10636, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10637, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10638, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10639, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10640, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10641, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10642, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10643, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10644, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10645, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10646, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10647, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10648, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10649, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10650, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10651, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10652, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10653, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10654, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10655, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10656, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10657, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10658, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10659, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10660, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10661, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10662, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10663, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10664, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10665, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10666, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10667, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10668, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10669, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10670, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10671, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10672, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10673, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10674, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10675, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (10676, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', '测试', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 23:11:23', '2021-01-01 22:38:31');
INSERT INTO `gf_content` VALUES (10685, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10686, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10687, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10688, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10689, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10690, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10691, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10692, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10693, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10694, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10695, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10696, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10697, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10698, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10699, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10700, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10701, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10702, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10703, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10704, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10705, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10706, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10707, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10708, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10709, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10710, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10711, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10712, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10713, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10714, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10715, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10716, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10717, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10718, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10719, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10720, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10721, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10722, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10723, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10724, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10725, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10726, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10727, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10728, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10729, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10730, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10731, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10732, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (10738, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (10739, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (10740, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (10741, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (10742, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 23:12:15', '2020-11-15 18:03:59');
INSERT INTO `gf_content` VALUES (10743, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10744, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10745, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10746, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10747, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10748, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10749, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10750, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10751, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10752, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10753, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10754, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10755, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10756, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10757, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10758, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10759, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10760, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10761, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10762, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10763, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10764, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10765, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10766, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10767, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10768, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10769, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10770, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10771, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10772, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10773, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10774, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10775, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10776, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10777, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10778, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10779, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10780, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10781, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (10782, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', '测试', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:16', '2020-11-10 23:12:16');
INSERT INTO `gf_content` VALUES (20002, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:02:53', '2020-11-10 23:02:53');
INSERT INTO `gf_content` VALUES (20003, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (20004, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (20005, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (20006, NULL, 'article', 9, 1, NULL, 'GoFrame v1.12 发布，数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:03:45', '2020-11-10 23:03:45');
INSERT INTO `gf_content` VALUES (20107, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (20108, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (20109, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (20110, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (20111, NULL, 'article', 10, 1, NULL, '源码解读：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:00', '2020-11-10 23:04:00');
INSERT INTO `gf_content` VALUES (20211, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (20212, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (20213, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (20214, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (20215, NULL, 'article', 11, 1, NULL, '技术架构：数据库驱动开发、日志滚动切分等等新特性', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\n怎么搜索自己的浏览历史\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nMySQL8允许远程连接\r\n\r\nwilsonyx 2018-09-11 11:38:26  7692  收藏 4\r\n分类专栏： 软件介绍 docker\r\n版权\r\n一、设置MySQL服务允许外网访问\r\n修改mysql的配置文件，有的是my.ini（windows），有的是my.cnf（linux），\r\n在配置文件中增加\r\n[mysqld]\r\nport=3306\r\nbind-address=0.0.0.0\r\n然后重新启动mysql服务，执行service mysql restart。\r\n二、设置mysql用户支持外网访问\r\n需要使用root权限登录mysql，更新mysql.user表，设置指定用户的Host字段为%，默认一般为127.0.0.1或者localhost。\r\n1.登录数据库\r\nmysql -u root -p\r\n输入密码\r\nmysql> use mysql;\r\n\r\n2.查询host\r\nmysql> select user,host from user;\r\n\r\n3.创建host\r\n如果没有”%”这个host值,就执行下面这两句:\r\nmysql> update user set host=’%’ where user=’root’;\r\nmysql> flush privileges;\r\n\r\n4.授权用户\r\n\r\nalter user \'root\'@\'%\' identified with mysql_native_password by \'root\';\r\n1\r\nflush privileges;\r\n1\r\n（1）任意主机以用户root和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n（2）IP为192.168.133.128的主机以用户myuser和密码mypwd连接到mysql服务器\r\nmysql> GRANT ALL PRIVILEGES ON . TO ‘myuser’@’192.168.133.128’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n\r\n【host字段说明】\r\n\r\n% 允许从任何ip登录\r\nx.x.x.x 允许从指定ip访问\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n3\r\n\r\n分享\r\n\r\n收藏\r\n4\r\n\r\n手机看\r\n\r\n打赏\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\nPython爬虫超详细讲解（零基础入门，小朋友都看得懂）\r\n11-10\r\n这可能是你见过全网最全面的网络爬虫干货总结\r\n智鼎(附答案).zip\r\n04-22\r\n并不是完整题库，但是有智鼎在线2019年9、10、11三个月的试题，有十七套以上题目，普通的网申行测题足以对付，可以在做题时自己总结一些规律，都不是很难\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_40571358\r\ndaww1969:这样安装的mysql如何重启？？6月前回复\r\n点赞\r\nqq_41117850\r\n会敲代码的灰太狼:GRANT ALL PRIVILEGES ON . TO ‘root’@’%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION; 你这句话能执行吗10月前回复\r\n点赞\r\nqq_14945327\r\n码哥码哥明N1ce回复:应该是 GRANT ALL PRIVILEGES ON *.* TO ‘root@%’ IDENTIFIED BY ‘mypwd’ WITH GRANT OPTION;5月前回复\r\n点赞\r\n1\r\nMysql 8.0+ 开启远程访问\r\nxiaowen555555\r\n 1万+\r\n1、 mysql -u root -p ‘原来的密码’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入数据库中 2、 show databases; 3、 use mysql; 4、使用以下命令开启root用户远程访问权限： CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; GRANT ALL ON *.* T...\r\nMySQL8.0设置远程访问权限，Navicat连接mysql\r\n爱笑才不是傻帽的博客\r\n 1万+\r\n今天centos7安装了mysql8.0过后远程登录数据库报错 1.首先查看防火墙状态 防火墙版本的不同命令也会有不同 0.4的命令为 systemctl status firewall.service 0.5的命令为 systemctl status firewalld 防火墙没有运行 2.命令登入服务器mysql 3.执行下面语句添加权限 use mysql; se...\r\nMySql8.0远程连接配置_飞起来的小猪的博客-CSDN博客\r\n11-5\r\n前言 最近在服务器安装MySql8.0数据库,安装完成以后,在自己本机使用Navicat远程连接MySql报错: host is not allowed to connect to this MySQL server.根据经验想到...\r\nMySQL8.0允许远程连接_江冷易水寒-CSDN博客\r\n10-31\r\n二. 远程连接可能出现的问题及解决方法 1. 使用Navicat Premium 连接MySQL时出现如下错误: 错误原因 mysql8之前的版本中加密规则是mysql_native_password,而在mysql...\r\nMySQL8.0设置远程访问权限\r\nweixin_40079336的博客\r\n 4275\r\n一、创建用户和授权       在mysql8.0创建用户和授权和之前不太一样了，其实严格上来讲，也不能说是不一样,只能说是更严格,mysql8.0需要先创建用户和设置密码,然后才能授权。   #先创建一个用户 create user \'hong\'@\'%\' identified by \'123123\';   #再进行授权 grant all privileges on *.* t...\r\nMySQL8设置允许远程连接\r\nXIYECODE的博客\r\n 299\r\n创建一个远程连接用户，‘hadoop’@’%’（hadoop是用户名，%是允许任意远程主机连接） mysql> create user \'hadoop\'@\'%\' identified by \'123456\'; Query OK, 0 rows affected (0.08 sec) mysql> grant all PRIVILEGES on hadoop.* to \'hadoop\'...\r\nmysql8.0 安装 修改密码 允许远程连接_宇亲的博客-CSDN博客\r\n10-30\r\ndefault_authentication_plugin=mysql_native_password 8.打开远程访问 对于允许远程访问,有两种角色,一种是我们的root用户,还有一种是非root用户,从安全的角度(我也...\r\nMySQL 8.0 允许远程连接的设置_jacobzhuo的博客-CSDN博客\r\n10-26\r\nMySQL 8.0 的用户授权语句和之前版本不同,老版本的常用授权语句,在 MySQL 8.0 版本中 已不能使用,如使用旧版本授权语句会报错。\r\n完美解决spring cloud gateway 获取body内容并修改\r\nseantdj的博客\r\n 1万+\r\n之前写过一篇文章，如何获取body的内容。 Spring Cloud Gateway获取body内容，不影响GET请求 确实能够获取所有body的内容了，不过今天终端同学调试接口的时候和我说，遇到了400的问题，报错是这样的HTTP method names must be tokens，搜了一下，都是说https引起的。可我的项目还没用https，排除了。 想到是不是因为修改了body内容导致的...\r\nmysql8允许远程连接的坑\r\nqq_36618850的博客\r\n 1601\r\n其实也没啥坑， ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘netwin123$%^’; GRANT ALL ON . TO ‘root’@’%’; flush privileges;\r\nMySQL 8 允许远程主机连接本地服务器_imk_的博客-CSDN博客\r\n11-1\r\n以上的命令表示:创建一个账户,用户名为root,密码为password,允许 IP 为192.168.1.4的主机连接到本机的 MySQL 服务器。 新建的账户被添加到mysql数据库的user表...\r\n解决Mysql8+版本远程连接问题(亲测有效)_向小凯同学学习-CSDN博客\r\n9-30\r\n3.远程连接 OK了 三、创建用户并授权 1.创建用户 Mysql 8 在创建用户上面,有了很大的不同 Mysql 8 之前的创建方式在这里会报错 ...\r\nmysql8密码修改以及root账户开启允许远程连接\r\n小小的心,有大大的梦的博客\r\n 3511\r\n开启允许root账户远程连接: 首先使用mysql -u root -p; 进入root账户 1.use mysql;//切换使用mysql数据库 2.select user,host from user; //查看用户是否开启远程 3.update user set host=\'%\' where user=\'root\'; //开启远程 4.flush privileges;//刷新权限 ...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\nmysql8.0开启远程连接_m0_47201619的博客-CSDN博客\r\n10-24\r\nmysql8.0以后的版本开启远程连接:1.CREATE USER \'root\'@\'%\' IDENTIFIED BY \'你的密码\'; 2.GRANT ALL ON *.* TO \'root\'@\'%\'; 3.ALTER USER \'root\'@...\r\n使用mysql8.x版本设置远程连接_Ethanxumf的博客-CSDN博客\r\n11-1\r\nMySQL8设置允许远程连接 XIYECODE的博客 12-14 295 创建一个远程连接用户,‘hadoop’@’%’(hadoop是用户名,%是允许任意远程主机连接) mysql> create user...\r\nMySQL配置允许远程连接\r\nasdXT的博客\r\n 1万+\r\nMySQL默认在本地localhost登录root用户，然而远程连接却会报错(root@X.X.X.X acess denied) 这里就需要进行配置允许远程连接 方式一： 进入mysql： mysql -uroot -p 运行mysql： use mysql; 开启远程访问权限： GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' ...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\n400-660-0108\r\n\r\nkefu@csdn.net\r\n\r\n在线客服\r\n工作时间 8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\nwilsonyx\r\n码龄5年\r\n 暂无认证\r\n555\r\n原创\r\n3327\r\n周排名\r\n3201\r\n总排名\r\n72万+\r\n访问\r\n\r\n等级\r\n1万+\r\n积分\r\n103\r\n粉丝\r\n131\r\n获赞\r\n71\r\n评论\r\n217\r\n收藏\r\nGitHub\r\n专栏达人\r\n持之以恒\r\n1024勋章\r\n勤写标兵Lv2\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\ndocker: Error response from daemon: Conflict. The container name \"/mysql\" is already in use by conta  17485\r\nfastdfs启动与停止详解  13841\r\nnginx安装时/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthroug  12035\r\ngolang中range在slice和map遍历中的注意事项  10709\r\ngolang中json的omitempty使用  9891\r\n分类专栏\r\n\r\ngo语言\r\n19篇\r\n\r\n图像\r\n1篇\r\n\r\n区块链超级账本\r\n\r\n超级账本\r\n\r\ngolang\r\n129篇\r\n\r\n区块链\r\n88篇\r\n\r\n软件安装\r\n16篇\r\n\r\ncentos系统\r\n1篇\r\n\r\n密码学\r\n32篇\r\n\r\n命令\r\n2篇\r\n\r\n软件介绍\r\n22篇\r\n\r\n以太坊\r\n30篇\r\n\r\n超级账本\r\n44篇\r\n\r\n框架\r\n3篇\r\n\r\n实用工具\r\n115篇\r\n\r\n代码示例\r\n2篇\r\n\r\n实用技术\r\n58篇\r\n\r\nLinux\r\n8篇\r\n\r\ndocker\r\n15篇\r\n\r\n算法\r\n21篇\r\n\r\ngo语言MySQL\r\n2篇\r\n\r\n前端\r\n16篇\r\n\r\n爬虫\r\n4篇\r\n\r\nbeego\r\n20篇\r\n\r\n数据库\r\n8篇\r\n\r\nspark\r\n4篇\r\n\r\npython\r\n8篇\r\n\r\nnodejs\r\n8篇\r\n\r\nreact\r\n10篇\r\n\r\n项目管理\r\n2篇\r\n\r\ntruffle\r\n4篇\r\n\r\nweb3\r\n2篇\r\n\r\nwebpack\r\n1篇\r\n\r\n机器学习\r\n8篇\r\n\r\n设计模式\r\n2篇\r\n\r\n数据结构\r\n5篇\r\n\r\n微服务\r\n7篇\r\n\r\nmongdb\r\n13篇\r\n\r\nelasticsearch\r\n9篇\r\n\r\nActiveMQ\r\n2篇\r\n\r\n大数据\r\n1篇\r\n\r\nMySQL\r\n2篇\r\n\r\n推荐网站\r\n2篇\r\n\r\n最新评论\r\n椭圆曲线加密算法详解\r\nqq_45550742: 1/2mod23怎么等于12\r\n\r\ngo语言连接MySQL中unknown driver \"mysql\" (forgotten import?)\r\nqq_38212298: 添加了也报错。。\r\n\r\ngolang中range在slice和map遍历中的注意事项\r\nmrfirst: v是for循环的内部变量啊~\r\n\r\n消息认证码(message authentication code)MAC\r\nCell0: Eveil 想搞破坏的坏人\r\n\r\ngo中for循环异常处理\r\nwangbiao007: 多谢，按照你的方式已解决\r\n\r\n最新文章\r\ngofmt 保存时自动格式化代码 fmt\r\nconnection pool exhausted\r\n权重衰减 L2正则化\r\n2020年27篇2019年134篇2018年416篇\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:04:09', '2020-11-10 23:04:09');
INSERT INTO `gf_content` VALUES (20315, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '  菜单腾讯云\r\n腾讯云首页\r\n备案控制台\r\n云+社区\r\n专栏问答沙龙团队主页开发者手册智能钛AI腾讯云大学TVP\r\n找文章 / 找答案 / 找技术大牛\r\n写文章提问登录注册\r\nDevOps时代\r\n385 篇文章 B 站基于大仓库的 CI/CD 及微服务实践	转到我的清单\r\n专栏首页DevOps时代的专栏B 站基于大仓库的 CI/CD 及微服务实践\r\n4\r\n1\r\n\r\n\r\nB 站基于大仓库的 CI/CD 及微服务实践\r\n2019-03-08阅读 1.1K0\r\n\r\n作者简介\r\n毛剑 B站 平台架构师&EP负责人\r\n\r\nAgenda\r\n我是在大概2015年的时候加入B站，之前是负责整个B站的后端，大概在2018年的时候转架构师，监管一个EP的团队。其实之前虽然没有做EP的一些事情，但是在转团队的时候，其实也进行了这样的实践。自己也有一些想法，如何快速交付、如何监管代码质量、如何测试等等。\r\n\r\n我的分享会分为三大块，首先什么是大仓库。\r\n\r\n这个东西是大概一两年前，我当时听别人一个分享，介绍的是他们把所有的代码放在仓库里面如何工作。后来我也看到一些文章包括一些论文，有一篇文章非常经典，叫做谷歌为什么把数十亿代码放在一个仓库，包括陆陆续续我发现有一些国外在硅谷创业的公司，都在做这方面的实战，我就在思考包括自己的一些痛点，后来就走到这个方向。\r\n\r\n第二块在实施工具链上的一些建设。\r\n\r\n第三个如何结合大仓库，做一些CI/CD。\r\n\r\n\r\n1. Mono-Repo\r\n首先介绍一下背景，2015年加入的时候，我们当时基于一个叫织梦（音），所以我们要做转型，包括引发一些开发人员在这个项目更好地迭代，因为当时的代码就是B站KFC全家桶，所有的代码都在里面。\r\n\r\n后来我们做微服务演进的时候，发现我们的基础库经常跟着我们的业务发展或者需求不断优化或者叠加。老实话来说，我们一开始做基础库的时候，或者我们的抽象不是很合理，或者破坏了一些原则等等。其实基础库都会频繁升级。\r\n\r\n我印象比较深，之前是靠管理手段推技术库，包括所有的分仓库的基础库的代码推进也好，其实都是靠管理手段。比如我在群里面，几月几号必须在几点钟把基础库全部升级，这次变更可能是破坏性的，意味着我们的业务代码可能也会跟着被破坏，这个其实是比较糟糕的体验。包括我自己，每天在群里面靠吼，这个是非常低效的。\r\n\r\n我当时管了大概有五六十个人，其实我每个同事的一些代码我都会关注。虽然有口号，但是流程是不统一的，基本也是靠每个组长去要求团队，但是整体不够自动化。\r\n\r\n第三点我们移动端，小bug非常多。我们大量测试的工作，积压在发版前，所以说大家其实一开始都是在憋大招，憋到最后要发版的时候，在上车前大家全部提测，这也是非常糟糕的。因为你没有一个持续的，测试的工作也是无法前进的，就导致交付的速度低下。\r\n\r\n最后一个问题版本管理非常复杂，包括后端相对来说还好，因为基础库相对统一以后，这个版本的1.0版本号，另外一个基础库的2.0非常复杂。我当时看的时候，一个超大的图，各种版本号，组件是不统一的，非常混乱。\r\n\r\n\r\n我们有一个B站的评论模块，一个评论组件，可能因为平台他在做这个需求的时候，没有考虑的那么周全，我一个业务使用的时候，发现你功能不齐，我是不是可以代码改一改，这种情况非常常见。这些代码分散在各个仓库里面，所以这种拷贝代码的情况非常多。\r\n\r\n所以我们交付到安卓渠道的时候，因为只有一个包，你要把所有代码合成打一个包，所以他的量是非常大的。这些都是我们在这两三年的过程中遇到的问题。所以我们后来引入了Mono-Repository，只有单一产品的仓库包含了多个基础库，应用等等。我们是把所有的代码托管到叫平台的一个库，我们取了一个名字叫做Kratos。\r\n\r\n\r\n2. Mono-Repository Toolchain\r\nMono-Repository 优势\r\n说一下为什么转型到大仓库，有哪些优势？我们一一讲一下。\r\n\r\n首先第一个觉得比较爽的，有一个一致的版本。以前我们基础库可能1.0、2.0，非常烦，每次不同的业务要发布的时候，都要依赖不同的版本号，这都是比较麻烦的。使用大仓以后，第一个体验就是一致的版本，我们基础库的升级，版本是通透透明可见的，版本是一致的。\r\n\r\n间接的我们的代码始终保持先进性。为什么这么说？比方说我的基础库从1.0迭代到2.0，如果说只能靠行政手段去吼，我的架包到2.0，你去申请一下。其实对业务方来说，他其实是没有动力的。一般都会有所谓的变更管理的思路，我就不改，但是你必须要保证我的兼容性。\r\n\r\n第二个就是极致的代码复用，代码拷来拷去，非常混乱。我们现在合完大仓以后，如果一个团队想要依赖另外一个团队代码，其实就是跨目录的依赖，没有所谓的用某个jar包几点零，这个是比较麻烦的。\r\n\r\n如果我有一个好多的仓库，对于一个新人来说，就像一个大城市一样，他进去以后找不到他在哪里。\r\n\r\n目前我们一个新同学入职以后，只要开一个仓库的权限，他所有的东西都可以浏览到，这个其实是非常简单的。我们另外一些同事，可能要开发基础功能的时候，也会倾向先在大仓库里面找有没有已经存在的功能。\r\n\r\n第三个点简单的依赖管理，怎么讲？我们构建系统，可以轻松地在目录之间挂上代码，整个依赖非常简单。这里面还有些特殊，因为我们可能还会引用一些第三方的开源库，我们现在也是在尝试像go 1.1的功能，目前我们是把第三方的库，使用版本号下载下来，再提交到大仓库里面。\r\n\r\n还有一个优势会简单的依赖管理，我以前也经常遇到过移动端的同事。比如说A这个库会依赖B和C，B和C再依赖D。我们发现有可能出现依赖D的库会有两个版本，这两个版本可能是不兼容的，包括服务端其实也遇到过。比方说卡夫卡有一次升级，他代码就做了一些破坏性的变更。这个时候我们要升级的话，其实就比较难推动的了，有些人用的比较老，有些人用的比较新，类似这样的。\r\n\r\n当然对于我们自己的组建库来说也是一样的，有些人用的新的，有些人用的老的，引入第三方的库，在编的时候其实就没有办法处理了，这个时候就要做一些取舍。我们移动端因为分仓库开发了，每个业务线在自己的仓库下开发，一开始使用的平台公共组建，有些人是1.0，有些人是1.1，这个时候在合包的时候也容易出错。\r\n\r\n最终合入总包的时候，也会导致一些库的变更，又要重新测，这也是得不偿失的。\r\n\r\n我们发现在其他语言或者是，比方说以go为例子，为什么会比较推崇静态连接方式？因为你相当于交付二进制，其实我觉得思路上是和大仓库的思路一致的，就是我把所有东西自我包含，我就可以很简单地交付出去。所以他是可以简单的依赖管理。\r\n\r\n\r\n\r\n我们看一下还有一个他有一个原子化的代码更改，我们开发人员在一致的操作中，原子化的操作中，可以对代码库里的数百甚至数千的文件进行重大更改。\r\n\r\n比如我们包的名字处理不是特别好，假如我是在分开的仓库中，我要把包名改一下，我们会把这一次变更为什么这样做，涉及的影响会是什么，由谁破坏他的，谁就要修复他，我们用这种思路引导所有人配合技术部的迭代和升级。\r\n\r\n\r\n还有更好的支撑大规模代码库的重构和更新，我在单一的代码库里面可以捕获所有的依赖关系，我可以大胆地删除API。我们在一个目录迁移的时候，就做了一个计划。\r\n\r\n首先叫大仓库一键包装，把包名的路径改了，第二个保留老的代码一个月。有些人因为是分支开发，有些老的主干时间特别久，所以我们把老的保留时间长一点，一个月。\r\n\r\n一个月以后我们会把老的代码标记为过期，合入的时候会告诉他这是过期的不可以合入。这样的话就可以完成基础库的迭代和更新。\r\n\r\n\r\n灵活的团队界限以及代码归属权。首先代码库里面，一般会有业务的名字或者部门的名字，我们其实要使用别人的API非常简单，我只要找到他的目录在哪里，就能看到他所有的API，我就可以非常简单地使用他的API。\r\n\r\n包括有一些业务，因为组织结构在调整，团队经常变更，其实只要做目录的操作，就可以从一个部门划到另外一个部门。\r\n\r\n\r\n团队之间的更好合作，由于代码库的结构，以前开发人员需要决定代码库的边界，比如我是开发分享组界，你是开发评论组界。现在不需要这种共享式的开发，因为现在非常方便了，我们只要把目录调整一下，各自的归属就可以变更了，所以说也是非常好合作的。\r\n\r\n\r\n另外最大化的代码透明度，以及自然而然的按团队划分命名空间。这个变成了你API的路径或者命名空间。比如我们内部主要使用GRPC，那我们API路径统一为什么？比如他是在一个应用，他是一个会员服务，他的API对应的是GRPC还是什么，他是一个V1版本。\r\n\r\n我们其实已经很少去使用文档，我记得以前对接的时候就是别人问我要请求什么接口，然后我就各种找，找到我自己的文档分给他，然后这个文档可能过段时间还忘记更新了，这个事件经常发生，最终可能有一些代码生成器之类的，保证我们的文档更新。\r\n\r\n这种工作模式，会导致一个开发人员频繁的上下楼切换，就是一种找文档、一种找代码。我们现在其实就是文档接代码，他也可以非常清楚地告诉你我这个接口是干什么的，里面有什么参数，都描述的非常清楚。也不会到处问了，基于我想要的东西，比如我想获得VIP的状态，我可能在整条代码仓库里面搜VIP这个文件我可能就能找到，也不用到处找文本了。\r\n\r\n\r\n2. Mono-Repository Toolchain\r\nMono-Repository 问题\r\n我们使用大仓库以后，虽然解决了一些问题，但是也带来一些问题。\r\n\r\n首先非常复杂的就是构建系统，早期的时候体验非常糟糕的，因为我那个时候是比较急切地引入这么一个思路，但是我们团队大概50多个人。在整体协作上其实非常困难，为什么？经常会出现某一个开发同学被默认到主干了，我们虽然会跟他说你提交代码的时候或者合并到主干的时候一定要点主干，他这个就是编辑全部。\r\n\r\n这个因为需要大量时间，我整个代码规模非常大，可能要花非常长的时间，就导致开发人员不愿意做这个事情。后来就想能不能集成到一个Gitlab的CI/CD里面，我们后面做了一些改进，我们先没有用那个Gitlab的CI/CD，而是我们基于Gitlab hook的API，我们做了一个事件的触发。我们当时的指令叫加默值，就会触发一个HOOK，这个hook会做什么？我们做了几件事情。\r\n\r\n首先我们用Gitlab的那个包，能把他的依赖关系整个原文件解析出来，我就知道他破了哪个包。把这些依赖关系，这些数据存到依赖的一个图，我们每一次在加默值这个操作触发以后，就会查这个依赖数，那么我就知道你哪些被依赖的需要被重新构建，所以我们就做了一个增量变异，我们当时其实是自己实践的。\r\n\r\n后来我们也发现越来越多的公司，包括后来我听facebook使用一个构建系统，我们就发现其实谷歌内部有一个叫Bazel的一个东西，我们后面就逐渐从自己模改的方式切换到Bazel。\r\n\r\n\r\n为什么我会去推进Bazel？我发现各个团队都有自己的语言，如果基于每一个语言做同样的事情其实成本会比较高。所以说我们后来发现Bazel其实可以跟语言结合的。\r\n\r\n你可以认为在每个目录里面有个bulid文件，这个bulid文件会把这个目录描述出来我依赖谁。那么通过这种方式，我就可以知道全局的依赖关系，他还有个好处，就是所有的构建方式是统一的，所有语言都支持。你只要实现自己语言的录入就行了。\r\n\r\n还有个好处，我们分析出他的依赖关系以后，其实就可以做一个增量变异。比如说我改了A库，A其实只有B在使用，我用那种增量变异的话，我只需要变异B，其他是不需要的。第二他有一个工具支持多个语言。\r\n\r\n第三就是他可扩展，像Bazel为什么会出来？就是因为谷歌内部也是一个超大仓库，这是第三点。第四你可以扩展他，因为你可以编写自己的，所以我们目前在IOS上的大仓实践做的还不错。\r\n\r\n\r\n大仓还有一个就是良好的目录结构和依赖规范，这个看起来很简单，实际我们在实践过程中，我自己包括我们团队都犯了很多错。\r\n\r\n现在可以简单看一下IOS的仓库有点类似像这个样子，他可能有多个包，还有各个基础库，还有第三方的依赖库。\r\n\r\n我们现在在go的仓库里面也会类似，有三个库，一个是第三方的库、基础库、APP，APP对后端来说像管理后台、微服务、网关等等一些模块。\r\n\r\n当我们写代码的时候，库与库之间的依赖关系处理不好的时候，你会发现改一个仓库，会导致整个仓库全变，你变异的缓存中间结果特别容易失效，就会导致每次都要重叠。\r\n\r\n我们为此修复了很长时间，各种各样的历史原因，比如发现某一些库被所有人使用，他可能会被经常破坏，你就要考虑是不是出现一些问题。还有就是CHANGELOG，简单的依赖环境。\r\n\r\n\r\n还有大仓另外一些问题，就是超高代码质量要求。我们之前犯过一些错，就是基础库一些小的变动，导致所有都受影响。\r\n\r\n假设你有一个bug被合流主干那么就会有风险，因此我们在大仓库以后，就更有理由或者要求我们的同学写更多的自测，包括代码规范，这个要求都是非常严格的。\r\n\r\n同时我们也会利用Bazel跑一个增量的UT。另外如果我们现在是全量的UT开发人员可能都出去玩了，我们也做了一个增量的UT。\r\n\r\n另外我们以前这种人肉的REVIEW，这种工具我们不仅仅引入了很多业界经常用的，我们还做了很多定制的开发，把这些库打到流程里面，变成一种强制的手段。\r\n\r\n\r\n刚刚说了我们即使有大量的UT，很多静态扫描工具，仍然避免不了我们犯错。所以我们同学非常喜欢写UT，即使是这样我们还是会出现一些bug。\r\n\r\n我们后来使用一个灰度机制，首先希望我们这次改动能够尽快合入主干，但是我不希望他立马生效，所以我们通过一个Feature Flags。\r\n\r\n比如下面有一个Feature gates，结合我们的paas平台，通过这种方式启用。当我们这种基础库的灰度三四天或者七天我们发现比较稳定的时候，才会把flags去掉。\r\n\r\n\r\n另外我们需要大量工具链的投入，比如我们的Bazel你是不是足够了解他，还有管理Bazel远程的缓存。\r\n\r\n另外代码托管，如果你的代码仓库超级大，是不是需要一个存储。或者如果你是一个超大仓库，你是不是需要一个IDE，这些都是你供需的投入，都需要时间和人力。另外你test-infra非常复杂的。另外重点强调一下CodeReview，我们很鼓励沟通的。\r\n\r\n\r\nCodeReview有几个好处，我自己感触比较深的首先他是可以保证代码质量的，第二他是人员的备份。我们鼓励跨团队，其实目前B站以前是一个部门内是跨组的Review，现在我们有跨部门的Review，其实是一个非常好的人员备份工具。当然任何一个人，其实你的代码好多人都读过，好多人都授信，任何人都可以补上来。\r\n\r\n另外就是说他是一个知识共享和教学工具，因为他是一个良性的吐槽别人代码写的不好，因为我去看你的代码，我经常会在下面说你这写的不好，那写的不好，其实我是有压力的。\r\n\r\n我自己就会说写的好点。那么我再看你的代码，因为你老喷我，所以我也会喷你，所以这种良性循环，会促使这个代码越写越好。另外还有一个非常好的是一个知识共享，可以发给不同的同事分享。\r\n\r\n像之前管理职责非常重，我也会看代码。因为有些新同学可能在某些点上，他可能写出了你自己没想到的一些亮点。另外我们通过CodeReview，强调的是每个人对自己代码一定要负责，不仅仅是你要写出来，你要对他的质量复杂。\r\n\r\n\r\n后面再讲一下CodeOwner，你对整个生命周期负责，没有运维，没有测试，所有人都是工程师。首先大仓放弃了对读权限，因为大仓基本上大家进去什么代码都能看到，所以他对读权限基本是放弃了，但是他是对写权限进行了一些微控制，你不是什么目录都可以随意破坏别人代码的。我们怎么做的呢？\r\n\r\n我当时想的比较简单，当时我就想是不是在每个目录放一个Owner文件描述一下，后来我才发现像谷歌内部好多项目都已经采用这种机制了。后来我看了一下别的代码，他也是加工的文件。可能有一些细节的差异，我们内部定义了三个角色，一个是Owner，第二谁来负责，第三是谁编写的。\r\n\r\n另外我们怎么去集成起来，后来我们使用Gitlab的一个to do。我们养成一个习惯，我们进界面里面，我们先点一下看我今天有什么工作要做，有点像腾讯的一个产品，不是每天在群里面吼。\r\n\r\n另外就是邮件，这也是沟通的方式，大家在邮件里面形成很长的对话。当然我们比较紧急的一些通知也会发送企业微信。因为我们刚说了通过一个加默值的指令，gitlab master这种属于比较紧急的机制，这个也需要有的。\r\n\r\n\r\n最后再讲一下还有一些比较复杂的问题，一个完整的持续集成，我是把他推崇的图拿出来的。首先我们有提交代码、发布代码，会有几个流程。\r\n\r\n我觉得比较好的首先Gitlab的CI/CD特别友好的UI。在我们讨论区，会提示你这一次的代码变更，我们会提示是这些人，这些信息都会增加 Gitlab todo里面。\r\n\r\n\r\n\r\n3. Mono-Repo CI/CD\r\n还有一个非常重要的一点，我见过无数公司做了好多CI/CD的系统，都是脱离开发场景。为什么这么说？我们非常鼓励只在一个平台做所有的事情，因为你不需要切各种各样的系统，因为这些都是有成本的，而且会导致一个开发人员不断切换，特别麻烦。所有的CI/CD流程都不应该被定制，而是说自由发挥。\r\n\r\n我一开始不是特别理解为什么喜欢这种方式，后来想想因为在谷歌内部，所有人都是工程师，都可以使用代码。所以我觉得这是非常好的，包括大家有没有发现一些文件都是偏声明式的描述，本质上是希望自我都可以去描述的。\r\n\r\n\r\n另外我们做的一个hook的插件，这个插件解释每个目录的一些信息。比方说这个目录需要谁来，我们这里有个小箭头，可以点赞，在Gitlab上只要点个赞，只要拿到以后我们就知道，那么这个就被合并到主干了。\r\n\r\n我们在使用CodeOwner的时候也会发现一些问题，首先我们不是技术型的专家，非常难维护。还有他的CodeOwner基本不需要装什么东西，我们把所有变异的环境全部做成了容器。所以我们所有语言变异的环境，全部是有镜像（音）的。我们后来越来越鼓励你自己制作镜像，我们内部也会有一个私有的，你可以自己去构建你的环境。\r\n\r\n\r\n我们后来发现GitlabCI/CD有什么问题呢？第一个是分支亲缘性调度，你需要不断拖代码，这些文件因为都很小，他要发好多次网络请求。还有我们需要更进一步的抽象CI/CD。\r\n\r\n\r\n后来我们发现其实K8S有一个Prow，目前我们也是逐步往这个方向演进。\r\n\r\n\r\n这是一个Prow的一个架构，他其实多了一层抽象，除了hook抽象出来以后，他又单独出了一个模块。目前我们已经跟Prow官方沟通了，所以目前做了很多Gitlab的一些代码的植入，这个我们也是持续地跟官方在沟通。时间关系这个图简单来说就是分为调度、分为处理任务等等。\r\n\r\n\r\n\r\n我们还有一个非常有意思的话题，我们后来发现他里面有一个叫Helm的工具。因为UT覆盖率很高，基础库不用说，但是业务代码真正做好UT是非常困难的。我们依赖的中间件越来越多，其实非常复杂，你要把所有的引擎全部代码化，我觉得非常复杂，而且有各种各样的语言。\r\n\r\n所以我们一开始在想自己造一个东西，后来发现有点傻，工作量非常大，是不是可以把他容器化掉。所以我们数据操作层，他依赖的资源，我们也是上容器的。\r\n\r\n我们依赖一个物理机，你跑进去数据放进去了，如果你不清理非常麻烦。helm就是帮你管理这些镜像，帮助你升级，他也是自描述的文件表示，他依赖什么版本，应该在什么时候被启动，我觉得这是非常好用的。\r\n\r\n\r\n我们在合代码的时候，因为只有一个主干，其他都是分支代码。在合的时候，首先一定要通过第一个合完以后，进主干的代码要重新跑一遍Pipeline，因为有可能会失败。只跑一次Pipeline，包括集成测试也是跑一次。这样的话后来我看了一个风险数据，他以前一天只能合可能几个或者十几个，他现在一天可以合几十个了。\r\n\r\n\r\n\r\n\r\n欢迎加入哔哩哔哩的工程效率团队，大家可以扫我。B站工程团队比较有意思，因为我本来是做业务以及做其他架构师的，我们公司也非常重视工程效率。\r\n\r\n本文为毛剑老师在 GOPS 2018 · 上海站的分享，经毛剑老师审核授权发布。\r\n\r\n本文分享自微信公众号 - DevOps时代（DevOpsTimes）\r\n\r\n原文出处及转载信息见文内详细说明，如有侵权，请联系 yunjia_community@tencent.com 删除。\r\n\r\n原始发表时间：2019-02-15\r\n\r\n本文参与腾讯云自媒体分享计划，欢迎正在阅读的你也加入，一起分享。\r\n\r\n举报\r\n点赞 4分享\r\n我来说两句\r\n0 条评论\r\n登录 后参与评论\r\n相关文章\r\nDevOps 助力企业互联网 + 转型落地\r\n主持人：很多企业一直探索如何互联网化，如何上云，接下来的老师是来自北京睿至大数据解决方案总监叫郑伟，给我们带来DevOps是如何助力企业互联网+的转型落地。\r\n\r\nDevOps时代\r\n评审的艺术 — 谈谈现实中的代码评审\r\n曾经写过一点关于代码评审（code review）的文章，比如这篇和这篇，现在觉得关于它的认识又有了不少更新。软件工程的技术和实践分成两部分，一部分是和书本知识...\r\n\r\nDevOps时代\r\n评审的艺术——谈谈现实中的代码评审\r\n曾经写过一点关于代码评审（code review）的文章，比如这篇和这篇，现在觉得关于它的认识又有了不少更新。软件工程的技术和实践分成两部分，一部分是和书本知识...\r\n\r\nDevOps时代\r\nB 站基于大仓库的 CI/CD 及微服务实践\r\n我是在大概2015年的时候加入B站，之前是负责整个B站的后端，大概在2018年的时候转架构师，监管一个EP的团队。其实之前虽然没有做EP的一些事情，但是在转团队...\r\n\r\nCriss@陈磊\r\n为你的Jupyter Notebooks注入一剂强心针\r\nJupyter Notebooks是当今世界上最热门的Pythonistas编程环境，特别是对于那些热衷于机器学习和数据科学的人。几个月前，当我开始认真对待机器...\r\n\r\nAiTechYun\r\n从零到部署：用 Vue 和 Express 实现迷你全栈电商应用（二）\r\n我们在平时所用到的一些网站、App，它们会将我们的数据进行保存，当我们关闭这些网站或者 App 后，下次打开还能看到我们之前的一些文字、视频记录。在迷你全栈电商...\r\n\r\n一只图雀\r\npython的几种常用安装包的方式\r\n打开windows命令行，不需要输入“python”或输入”python3”，而是直接输入以下指令。我们默认系统环境变量已经按照安装位置设置好。 一般安装之...\r\n\r\npy3study\r\nTensorFlow技术主管详解：Google是怎样管理开源软件的\r\n唐旭 编译自 O’reilly 量子位 出品 | 公众号 QbitAI TensorFlow开源一年半以来，在GitHub上已经有了820位贡献者，close了...\r\n\r\n量子位\r\nPython-pip的安装与使用\r\n我们都知道python有很多的第三方库或者说是模块。这些库针对不同的应用，发挥不同的作用。我们在实际的项目中肯定会用到这些模块。那如何将这些模块导入到自己的项目...\r\n\r\n汤贤\r\npython虚拟环境virualenv的安装与使用\r\nvirtualenv 是一个创建隔绝的Python环境的工具。virtualenv创建一个包含所有必要的可执行文件的文件夹，用来使用Python工程所需的包。...\r\n\r\n小小科\r\n更多文章\r\n作者介绍\r\nDevOps时代\r\n关注专栏\r\n文章\r\n385\r\n阅读量\r\n196.1K\r\n获赞\r\n1.6K\r\n作者排名\r\n234\r\n精选专题\r\n云计算新趋势\r\nServerless浪潮已来，如何稳坐潮头领先业界？\r\n活动推荐\r\n云+社区3周年庆\r\n领取周年庆大礼包\r\n立即领取\r\n腾讯云自媒体分享计划\r\n入驻云加社区，共享百万资源包。\r\n立即入驻\r\n运营活动\r\n活动名称广告关闭\r\n目录\r\nAgenda\r\n1. Mono-Repo\r\n2. Mono-Repository Toolchain\r\nMono-Repository 优势\r\n2. Mono-Repository Toolchain\r\nMono-Repository 问题\r\n3. Mono-Repo CI/CD\r\n社区\r\n专栏文章\r\n互动问答\r\n技术沙龙\r\n技术快讯\r\n团队主页\r\n开发者手册\r\n智能钛AI\r\n活动\r\n原创分享计划\r\n自媒体分享计划\r\n邀请作者入驻\r\n自荐上首页\r\n在线直播\r\n生态合作计划\r\n资源\r\n腾讯云大学\r\n技术周刊\r\n社区标签\r\n开发者实验室\r\n关于\r\n视频介绍\r\n社区规范\r\n免责声明\r\n联系我们\r\n云+社区\r\n\r\n扫码关注云+社区\r\n\r\n领取腾讯云代金券\r\n\r\n热门产品\r\n域名注册云服务器区块链服务消息队列网络加速云数据库域名解析云存储视频直播\r\n热门推荐\r\n人脸识别腾讯会议企业云CDN 加速视频通话图像分析MySQL 数据库SSL 证书语音识别\r\n更多推荐\r\n数据安全负载均衡短信文字识别云点播商标注册小程序开发网站监控数据迁移\r\nCopyright © 2013 - 2020 Tencent Cloud. All Rights Reserved. 腾讯云 版权所有 京公网安备 11010802017518 粤B2-20090059-1\r\n\r\n扫描二维码\r\n\r\n\r\n返回顶部\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (20316, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '  菜单腾讯云\r\n腾讯云首页\r\n备案控制台\r\n云+社区\r\n专栏问答沙龙团队主页开发者手册智能钛AI腾讯云大学TVP\r\n找文章 / 找答案 / 找技术大牛\r\n写文章提问登录注册\r\nDevOps时代\r\n385 篇文章 B 站基于大仓库的 CI/CD 及微服务实践	转到我的清单\r\n专栏首页DevOps时代的专栏B 站基于大仓库的 CI/CD 及微服务实践\r\n4\r\n1\r\n\r\n\r\nB 站基于大仓库的 CI/CD 及微服务实践\r\n2019-03-08阅读 1.1K0\r\n\r\n作者简介\r\n毛剑 B站 平台架构师&EP负责人\r\n\r\nAgenda\r\n我是在大概2015年的时候加入B站，之前是负责整个B站的后端，大概在2018年的时候转架构师，监管一个EP的团队。其实之前虽然没有做EP的一些事情，但是在转团队的时候，其实也进行了这样的实践。自己也有一些想法，如何快速交付、如何监管代码质量、如何测试等等。\r\n\r\n我的分享会分为三大块，首先什么是大仓库。\r\n\r\n这个东西是大概一两年前，我当时听别人一个分享，介绍的是他们把所有的代码放在仓库里面如何工作。后来我也看到一些文章包括一些论文，有一篇文章非常经典，叫做谷歌为什么把数十亿代码放在一个仓库，包括陆陆续续我发现有一些国外在硅谷创业的公司，都在做这方面的实战，我就在思考包括自己的一些痛点，后来就走到这个方向。\r\n\r\n第二块在实施工具链上的一些建设。\r\n\r\n第三个如何结合大仓库，做一些CI/CD。\r\n\r\n\r\n1. Mono-Repo\r\n首先介绍一下背景，2015年加入的时候，我们当时基于一个叫织梦（音），所以我们要做转型，包括引发一些开发人员在这个项目更好地迭代，因为当时的代码就是B站KFC全家桶，所有的代码都在里面。\r\n\r\n后来我们做微服务演进的时候，发现我们的基础库经常跟着我们的业务发展或者需求不断优化或者叠加。老实话来说，我们一开始做基础库的时候，或者我们的抽象不是很合理，或者破坏了一些原则等等。其实基础库都会频繁升级。\r\n\r\n我印象比较深，之前是靠管理手段推技术库，包括所有的分仓库的基础库的代码推进也好，其实都是靠管理手段。比如我在群里面，几月几号必须在几点钟把基础库全部升级，这次变更可能是破坏性的，意味着我们的业务代码可能也会跟着被破坏，这个其实是比较糟糕的体验。包括我自己，每天在群里面靠吼，这个是非常低效的。\r\n\r\n我当时管了大概有五六十个人，其实我每个同事的一些代码我都会关注。虽然有口号，但是流程是不统一的，基本也是靠每个组长去要求团队，但是整体不够自动化。\r\n\r\n第三点我们移动端，小bug非常多。我们大量测试的工作，积压在发版前，所以说大家其实一开始都是在憋大招，憋到最后要发版的时候，在上车前大家全部提测，这也是非常糟糕的。因为你没有一个持续的，测试的工作也是无法前进的，就导致交付的速度低下。\r\n\r\n最后一个问题版本管理非常复杂，包括后端相对来说还好，因为基础库相对统一以后，这个版本的1.0版本号，另外一个基础库的2.0非常复杂。我当时看的时候，一个超大的图，各种版本号，组件是不统一的，非常混乱。\r\n\r\n\r\n我们有一个B站的评论模块，一个评论组件，可能因为平台他在做这个需求的时候，没有考虑的那么周全，我一个业务使用的时候，发现你功能不齐，我是不是可以代码改一改，这种情况非常常见。这些代码分散在各个仓库里面，所以这种拷贝代码的情况非常多。\r\n\r\n所以我们交付到安卓渠道的时候，因为只有一个包，你要把所有代码合成打一个包，所以他的量是非常大的。这些都是我们在这两三年的过程中遇到的问题。所以我们后来引入了Mono-Repository，只有单一产品的仓库包含了多个基础库，应用等等。我们是把所有的代码托管到叫平台的一个库，我们取了一个名字叫做Kratos。\r\n\r\n\r\n2. Mono-Repository Toolchain\r\nMono-Repository 优势\r\n说一下为什么转型到大仓库，有哪些优势？我们一一讲一下。\r\n\r\n首先第一个觉得比较爽的，有一个一致的版本。以前我们基础库可能1.0、2.0，非常烦，每次不同的业务要发布的时候，都要依赖不同的版本号，这都是比较麻烦的。使用大仓以后，第一个体验就是一致的版本，我们基础库的升级，版本是通透透明可见的，版本是一致的。\r\n\r\n间接的我们的代码始终保持先进性。为什么这么说？比方说我的基础库从1.0迭代到2.0，如果说只能靠行政手段去吼，我的架包到2.0，你去申请一下。其实对业务方来说，他其实是没有动力的。一般都会有所谓的变更管理的思路，我就不改，但是你必须要保证我的兼容性。\r\n\r\n第二个就是极致的代码复用，代码拷来拷去，非常混乱。我们现在合完大仓以后，如果一个团队想要依赖另外一个团队代码，其实就是跨目录的依赖，没有所谓的用某个jar包几点零，这个是比较麻烦的。\r\n\r\n如果我有一个好多的仓库，对于一个新人来说，就像一个大城市一样，他进去以后找不到他在哪里。\r\n\r\n目前我们一个新同学入职以后，只要开一个仓库的权限，他所有的东西都可以浏览到，这个其实是非常简单的。我们另外一些同事，可能要开发基础功能的时候，也会倾向先在大仓库里面找有没有已经存在的功能。\r\n\r\n第三个点简单的依赖管理，怎么讲？我们构建系统，可以轻松地在目录之间挂上代码，整个依赖非常简单。这里面还有些特殊，因为我们可能还会引用一些第三方的开源库，我们现在也是在尝试像go 1.1的功能，目前我们是把第三方的库，使用版本号下载下来，再提交到大仓库里面。\r\n\r\n还有一个优势会简单的依赖管理，我以前也经常遇到过移动端的同事。比如说A这个库会依赖B和C，B和C再依赖D。我们发现有可能出现依赖D的库会有两个版本，这两个版本可能是不兼容的，包括服务端其实也遇到过。比方说卡夫卡有一次升级，他代码就做了一些破坏性的变更。这个时候我们要升级的话，其实就比较难推动的了，有些人用的比较老，有些人用的比较新，类似这样的。\r\n\r\n当然对于我们自己的组建库来说也是一样的，有些人用的新的，有些人用的老的，引入第三方的库，在编的时候其实就没有办法处理了，这个时候就要做一些取舍。我们移动端因为分仓库开发了，每个业务线在自己的仓库下开发，一开始使用的平台公共组建，有些人是1.0，有些人是1.1，这个时候在合包的时候也容易出错。\r\n\r\n最终合入总包的时候，也会导致一些库的变更，又要重新测，这也是得不偿失的。\r\n\r\n我们发现在其他语言或者是，比方说以go为例子，为什么会比较推崇静态连接方式？因为你相当于交付二进制，其实我觉得思路上是和大仓库的思路一致的，就是我把所有东西自我包含，我就可以很简单地交付出去。所以他是可以简单的依赖管理。\r\n\r\n\r\n\r\n我们看一下还有一个他有一个原子化的代码更改，我们开发人员在一致的操作中，原子化的操作中，可以对代码库里的数百甚至数千的文件进行重大更改。\r\n\r\n比如我们包的名字处理不是特别好，假如我是在分开的仓库中，我要把包名改一下，我们会把这一次变更为什么这样做，涉及的影响会是什么，由谁破坏他的，谁就要修复他，我们用这种思路引导所有人配合技术部的迭代和升级。\r\n\r\n\r\n还有更好的支撑大规模代码库的重构和更新，我在单一的代码库里面可以捕获所有的依赖关系，我可以大胆地删除API。我们在一个目录迁移的时候，就做了一个计划。\r\n\r\n首先叫大仓库一键包装，把包名的路径改了，第二个保留老的代码一个月。有些人因为是分支开发，有些老的主干时间特别久，所以我们把老的保留时间长一点，一个月。\r\n\r\n一个月以后我们会把老的代码标记为过期，合入的时候会告诉他这是过期的不可以合入。这样的话就可以完成基础库的迭代和更新。\r\n\r\n\r\n灵活的团队界限以及代码归属权。首先代码库里面，一般会有业务的名字或者部门的名字，我们其实要使用别人的API非常简单，我只要找到他的目录在哪里，就能看到他所有的API，我就可以非常简单地使用他的API。\r\n\r\n包括有一些业务，因为组织结构在调整，团队经常变更，其实只要做目录的操作，就可以从一个部门划到另外一个部门。\r\n\r\n\r\n团队之间的更好合作，由于代码库的结构，以前开发人员需要决定代码库的边界，比如我是开发分享组界，你是开发评论组界。现在不需要这种共享式的开发，因为现在非常方便了，我们只要把目录调整一下，各自的归属就可以变更了，所以说也是非常好合作的。\r\n\r\n\r\n另外最大化的代码透明度，以及自然而然的按团队划分命名空间。这个变成了你API的路径或者命名空间。比如我们内部主要使用GRPC，那我们API路径统一为什么？比如他是在一个应用，他是一个会员服务，他的API对应的是GRPC还是什么，他是一个V1版本。\r\n\r\n我们其实已经很少去使用文档，我记得以前对接的时候就是别人问我要请求什么接口，然后我就各种找，找到我自己的文档分给他，然后这个文档可能过段时间还忘记更新了，这个事件经常发生，最终可能有一些代码生成器之类的，保证我们的文档更新。\r\n\r\n这种工作模式，会导致一个开发人员频繁的上下楼切换，就是一种找文档、一种找代码。我们现在其实就是文档接代码，他也可以非常清楚地告诉你我这个接口是干什么的，里面有什么参数，都描述的非常清楚。也不会到处问了，基于我想要的东西，比如我想获得VIP的状态，我可能在整条代码仓库里面搜VIP这个文件我可能就能找到，也不用到处找文本了。\r\n\r\n\r\n2. Mono-Repository Toolchain\r\nMono-Repository 问题\r\n我们使用大仓库以后，虽然解决了一些问题，但是也带来一些问题。\r\n\r\n首先非常复杂的就是构建系统，早期的时候体验非常糟糕的，因为我那个时候是比较急切地引入这么一个思路，但是我们团队大概50多个人。在整体协作上其实非常困难，为什么？经常会出现某一个开发同学被默认到主干了，我们虽然会跟他说你提交代码的时候或者合并到主干的时候一定要点主干，他这个就是编辑全部。\r\n\r\n这个因为需要大量时间，我整个代码规模非常大，可能要花非常长的时间，就导致开发人员不愿意做这个事情。后来就想能不能集成到一个Gitlab的CI/CD里面，我们后面做了一些改进，我们先没有用那个Gitlab的CI/CD，而是我们基于Gitlab hook的API，我们做了一个事件的触发。我们当时的指令叫加默值，就会触发一个HOOK，这个hook会做什么？我们做了几件事情。\r\n\r\n首先我们用Gitlab的那个包，能把他的依赖关系整个原文件解析出来，我就知道他破了哪个包。把这些依赖关系，这些数据存到依赖的一个图，我们每一次在加默值这个操作触发以后，就会查这个依赖数，那么我就知道你哪些被依赖的需要被重新构建，所以我们就做了一个增量变异，我们当时其实是自己实践的。\r\n\r\n后来我们也发现越来越多的公司，包括后来我听facebook使用一个构建系统，我们就发现其实谷歌内部有一个叫Bazel的一个东西，我们后面就逐渐从自己模改的方式切换到Bazel。\r\n\r\n\r\n为什么我会去推进Bazel？我发现各个团队都有自己的语言，如果基于每一个语言做同样的事情其实成本会比较高。所以说我们后来发现Bazel其实可以跟语言结合的。\r\n\r\n你可以认为在每个目录里面有个bulid文件，这个bulid文件会把这个目录描述出来我依赖谁。那么通过这种方式，我就可以知道全局的依赖关系，他还有个好处，就是所有的构建方式是统一的，所有语言都支持。你只要实现自己语言的录入就行了。\r\n\r\n还有个好处，我们分析出他的依赖关系以后，其实就可以做一个增量变异。比如说我改了A库，A其实只有B在使用，我用那种增量变异的话，我只需要变异B，其他是不需要的。第二他有一个工具支持多个语言。\r\n\r\n第三就是他可扩展，像Bazel为什么会出来？就是因为谷歌内部也是一个超大仓库，这是第三点。第四你可以扩展他，因为你可以编写自己的，所以我们目前在IOS上的大仓实践做的还不错。\r\n\r\n\r\n大仓还有一个就是良好的目录结构和依赖规范，这个看起来很简单，实际我们在实践过程中，我自己包括我们团队都犯了很多错。\r\n\r\n现在可以简单看一下IOS的仓库有点类似像这个样子，他可能有多个包，还有各个基础库，还有第三方的依赖库。\r\n\r\n我们现在在go的仓库里面也会类似，有三个库，一个是第三方的库、基础库、APP，APP对后端来说像管理后台、微服务、网关等等一些模块。\r\n\r\n当我们写代码的时候，库与库之间的依赖关系处理不好的时候，你会发现改一个仓库，会导致整个仓库全变，你变异的缓存中间结果特别容易失效，就会导致每次都要重叠。\r\n\r\n我们为此修复了很长时间，各种各样的历史原因，比如发现某一些库被所有人使用，他可能会被经常破坏，你就要考虑是不是出现一些问题。还有就是CHANGELOG，简单的依赖环境。\r\n\r\n\r\n还有大仓另外一些问题，就是超高代码质量要求。我们之前犯过一些错，就是基础库一些小的变动，导致所有都受影响。\r\n\r\n假设你有一个bug被合流主干那么就会有风险，因此我们在大仓库以后，就更有理由或者要求我们的同学写更多的自测，包括代码规范，这个要求都是非常严格的。\r\n\r\n同时我们也会利用Bazel跑一个增量的UT。另外如果我们现在是全量的UT开发人员可能都出去玩了，我们也做了一个增量的UT。\r\n\r\n另外我们以前这种人肉的REVIEW，这种工具我们不仅仅引入了很多业界经常用的，我们还做了很多定制的开发，把这些库打到流程里面，变成一种强制的手段。\r\n\r\n\r\n刚刚说了我们即使有大量的UT，很多静态扫描工具，仍然避免不了我们犯错。所以我们同学非常喜欢写UT，即使是这样我们还是会出现一些bug。\r\n\r\n我们后来使用一个灰度机制，首先希望我们这次改动能够尽快合入主干，但是我不希望他立马生效，所以我们通过一个Feature Flags。\r\n\r\n比如下面有一个Feature gates，结合我们的paas平台，通过这种方式启用。当我们这种基础库的灰度三四天或者七天我们发现比较稳定的时候，才会把flags去掉。\r\n\r\n\r\n另外我们需要大量工具链的投入，比如我们的Bazel你是不是足够了解他，还有管理Bazel远程的缓存。\r\n\r\n另外代码托管，如果你的代码仓库超级大，是不是需要一个存储。或者如果你是一个超大仓库，你是不是需要一个IDE，这些都是你供需的投入，都需要时间和人力。另外你test-infra非常复杂的。另外重点强调一下CodeReview，我们很鼓励沟通的。\r\n\r\n\r\nCodeReview有几个好处，我自己感触比较深的首先他是可以保证代码质量的，第二他是人员的备份。我们鼓励跨团队，其实目前B站以前是一个部门内是跨组的Review，现在我们有跨部门的Review，其实是一个非常好的人员备份工具。当然任何一个人，其实你的代码好多人都读过，好多人都授信，任何人都可以补上来。\r\n\r\n另外就是说他是一个知识共享和教学工具，因为他是一个良性的吐槽别人代码写的不好，因为我去看你的代码，我经常会在下面说你这写的不好，那写的不好，其实我是有压力的。\r\n\r\n我自己就会说写的好点。那么我再看你的代码，因为你老喷我，所以我也会喷你，所以这种良性循环，会促使这个代码越写越好。另外还有一个非常好的是一个知识共享，可以发给不同的同事分享。\r\n\r\n像之前管理职责非常重，我也会看代码。因为有些新同学可能在某些点上，他可能写出了你自己没想到的一些亮点。另外我们通过CodeReview，强调的是每个人对自己代码一定要负责，不仅仅是你要写出来，你要对他的质量复杂。\r\n\r\n\r\n后面再讲一下CodeOwner，你对整个生命周期负责，没有运维，没有测试，所有人都是工程师。首先大仓放弃了对读权限，因为大仓基本上大家进去什么代码都能看到，所以他对读权限基本是放弃了，但是他是对写权限进行了一些微控制，你不是什么目录都可以随意破坏别人代码的。我们怎么做的呢？\r\n\r\n我当时想的比较简单，当时我就想是不是在每个目录放一个Owner文件描述一下，后来我才发现像谷歌内部好多项目都已经采用这种机制了。后来我看了一下别的代码，他也是加工的文件。可能有一些细节的差异，我们内部定义了三个角色，一个是Owner，第二谁来负责，第三是谁编写的。\r\n\r\n另外我们怎么去集成起来，后来我们使用Gitlab的一个to do。我们养成一个习惯，我们进界面里面，我们先点一下看我今天有什么工作要做，有点像腾讯的一个产品，不是每天在群里面吼。\r\n\r\n另外就是邮件，这也是沟通的方式，大家在邮件里面形成很长的对话。当然我们比较紧急的一些通知也会发送企业微信。因为我们刚说了通过一个加默值的指令，gitlab master这种属于比较紧急的机制，这个也需要有的。\r\n\r\n\r\n最后再讲一下还有一些比较复杂的问题，一个完整的持续集成，我是把他推崇的图拿出来的。首先我们有提交代码、发布代码，会有几个流程。\r\n\r\n我觉得比较好的首先Gitlab的CI/CD特别友好的UI。在我们讨论区，会提示你这一次的代码变更，我们会提示是这些人，这些信息都会增加 Gitlab todo里面。\r\n\r\n\r\n\r\n3. Mono-Repo CI/CD\r\n还有一个非常重要的一点，我见过无数公司做了好多CI/CD的系统，都是脱离开发场景。为什么这么说？我们非常鼓励只在一个平台做所有的事情，因为你不需要切各种各样的系统，因为这些都是有成本的，而且会导致一个开发人员不断切换，特别麻烦。所有的CI/CD流程都不应该被定制，而是说自由发挥。\r\n\r\n我一开始不是特别理解为什么喜欢这种方式，后来想想因为在谷歌内部，所有人都是工程师，都可以使用代码。所以我觉得这是非常好的，包括大家有没有发现一些文件都是偏声明式的描述，本质上是希望自我都可以去描述的。\r\n\r\n\r\n另外我们做的一个hook的插件，这个插件解释每个目录的一些信息。比方说这个目录需要谁来，我们这里有个小箭头，可以点赞，在Gitlab上只要点个赞，只要拿到以后我们就知道，那么这个就被合并到主干了。\r\n\r\n我们在使用CodeOwner的时候也会发现一些问题，首先我们不是技术型的专家，非常难维护。还有他的CodeOwner基本不需要装什么东西，我们把所有变异的环境全部做成了容器。所以我们所有语言变异的环境，全部是有镜像（音）的。我们后来越来越鼓励你自己制作镜像，我们内部也会有一个私有的，你可以自己去构建你的环境。\r\n\r\n\r\n我们后来发现GitlabCI/CD有什么问题呢？第一个是分支亲缘性调度，你需要不断拖代码，这些文件因为都很小，他要发好多次网络请求。还有我们需要更进一步的抽象CI/CD。\r\n\r\n\r\n后来我们发现其实K8S有一个Prow，目前我们也是逐步往这个方向演进。\r\n\r\n\r\n这是一个Prow的一个架构，他其实多了一层抽象，除了hook抽象出来以后，他又单独出了一个模块。目前我们已经跟Prow官方沟通了，所以目前做了很多Gitlab的一些代码的植入，这个我们也是持续地跟官方在沟通。时间关系这个图简单来说就是分为调度、分为处理任务等等。\r\n\r\n\r\n\r\n我们还有一个非常有意思的话题，我们后来发现他里面有一个叫Helm的工具。因为UT覆盖率很高，基础库不用说，但是业务代码真正做好UT是非常困难的。我们依赖的中间件越来越多，其实非常复杂，你要把所有的引擎全部代码化，我觉得非常复杂，而且有各种各样的语言。\r\n\r\n所以我们一开始在想自己造一个东西，后来发现有点傻，工作量非常大，是不是可以把他容器化掉。所以我们数据操作层，他依赖的资源，我们也是上容器的。\r\n\r\n我们依赖一个物理机，你跑进去数据放进去了，如果你不清理非常麻烦。helm就是帮你管理这些镜像，帮助你升级，他也是自描述的文件表示，他依赖什么版本，应该在什么时候被启动，我觉得这是非常好用的。\r\n\r\n\r\n我们在合代码的时候，因为只有一个主干，其他都是分支代码。在合的时候，首先一定要通过第一个合完以后，进主干的代码要重新跑一遍Pipeline，因为有可能会失败。只跑一次Pipeline，包括集成测试也是跑一次。这样的话后来我看了一个风险数据，他以前一天只能合可能几个或者十几个，他现在一天可以合几十个了。\r\n\r\n\r\n\r\n\r\n欢迎加入哔哩哔哩的工程效率团队，大家可以扫我。B站工程团队比较有意思，因为我本来是做业务以及做其他架构师的，我们公司也非常重视工程效率。\r\n\r\n本文为毛剑老师在 GOPS 2018 · 上海站的分享，经毛剑老师审核授权发布。\r\n\r\n本文分享自微信公众号 - DevOps时代（DevOpsTimes）\r\n\r\n原文出处及转载信息见文内详细说明，如有侵权，请联系 yunjia_community@tencent.com 删除。\r\n\r\n原始发表时间：2019-02-15\r\n\r\n本文参与腾讯云自媒体分享计划，欢迎正在阅读的你也加入，一起分享。\r\n\r\n举报\r\n点赞 4分享\r\n我来说两句\r\n0 条评论\r\n登录 后参与评论\r\n相关文章\r\nDevOps 助力企业互联网 + 转型落地\r\n主持人：很多企业一直探索如何互联网化，如何上云，接下来的老师是来自北京睿至大数据解决方案总监叫郑伟，给我们带来DevOps是如何助力企业互联网+的转型落地。\r\n\r\nDevOps时代\r\n评审的艺术 — 谈谈现实中的代码评审\r\n曾经写过一点关于代码评审（code review）的文章，比如这篇和这篇，现在觉得关于它的认识又有了不少更新。软件工程的技术和实践分成两部分，一部分是和书本知识...\r\n\r\nDevOps时代\r\n评审的艺术——谈谈现实中的代码评审\r\n曾经写过一点关于代码评审（code review）的文章，比如这篇和这篇，现在觉得关于它的认识又有了不少更新。软件工程的技术和实践分成两部分，一部分是和书本知识...\r\n\r\nDevOps时代\r\nB 站基于大仓库的 CI/CD 及微服务实践\r\n我是在大概2015年的时候加入B站，之前是负责整个B站的后端，大概在2018年的时候转架构师，监管一个EP的团队。其实之前虽然没有做EP的一些事情，但是在转团队...\r\n\r\nCriss@陈磊\r\n为你的Jupyter Notebooks注入一剂强心针\r\nJupyter Notebooks是当今世界上最热门的Pythonistas编程环境，特别是对于那些热衷于机器学习和数据科学的人。几个月前，当我开始认真对待机器...\r\n\r\nAiTechYun\r\n从零到部署：用 Vue 和 Express 实现迷你全栈电商应用（二）\r\n我们在平时所用到的一些网站、App，它们会将我们的数据进行保存，当我们关闭这些网站或者 App 后，下次打开还能看到我们之前的一些文字、视频记录。在迷你全栈电商...\r\n\r\n一只图雀\r\npython的几种常用安装包的方式\r\n打开windows命令行，不需要输入“python”或输入”python3”，而是直接输入以下指令。我们默认系统环境变量已经按照安装位置设置好。 一般安装之...\r\n\r\npy3study\r\nTensorFlow技术主管详解：Google是怎样管理开源软件的\r\n唐旭 编译自 O’reilly 量子位 出品 | 公众号 QbitAI TensorFlow开源一年半以来，在GitHub上已经有了820位贡献者，close了...\r\n\r\n量子位\r\nPython-pip的安装与使用\r\n我们都知道python有很多的第三方库或者说是模块。这些库针对不同的应用，发挥不同的作用。我们在实际的项目中肯定会用到这些模块。那如何将这些模块导入到自己的项目...\r\n\r\n汤贤\r\npython虚拟环境virualenv的安装与使用\r\nvirtualenv 是一个创建隔绝的Python环境的工具。virtualenv创建一个包含所有必要的可执行文件的文件夹，用来使用Python工程所需的包。...\r\n\r\n小小科\r\n更多文章\r\n作者介绍\r\nDevOps时代\r\n关注专栏\r\n文章\r\n385\r\n阅读量\r\n196.1K\r\n获赞\r\n1.6K\r\n作者排名\r\n234\r\n精选专题\r\n云计算新趋势\r\nServerless浪潮已来，如何稳坐潮头领先业界？\r\n活动推荐\r\n云+社区3周年庆\r\n领取周年庆大礼包\r\n立即领取\r\n腾讯云自媒体分享计划\r\n入驻云加社区，共享百万资源包。\r\n立即入驻\r\n运营活动\r\n活动名称广告关闭\r\n目录\r\nAgenda\r\n1. Mono-Repo\r\n2. Mono-Repository Toolchain\r\nMono-Repository 优势\r\n2. Mono-Repository Toolchain\r\nMono-Repository 问题\r\n3. Mono-Repo CI/CD\r\n社区\r\n专栏文章\r\n互动问答\r\n技术沙龙\r\n技术快讯\r\n团队主页\r\n开发者手册\r\n智能钛AI\r\n活动\r\n原创分享计划\r\n自媒体分享计划\r\n邀请作者入驻\r\n自荐上首页\r\n在线直播\r\n生态合作计划\r\n资源\r\n腾讯云大学\r\n技术周刊\r\n社区标签\r\n开发者实验室\r\n关于\r\n视频介绍\r\n社区规范\r\n免责声明\r\n联系我们\r\n云+社区\r\n\r\n扫码关注云+社区\r\n\r\n领取腾讯云代金券\r\n\r\n热门产品\r\n域名注册云服务器区块链服务消息队列网络加速云数据库域名解析云存储视频直播\r\n热门推荐\r\n人脸识别腾讯会议企业云CDN 加速视频通话图像分析MySQL 数据库SSL 证书语音识别\r\n更多推荐\r\n数据安全负载均衡短信文字识别云点播商标注册小程序开发网站监控数据迁移\r\nCopyright © 2013 - 2020 Tencent Cloud. All Rights Reserved. 腾讯云 版权所有 京公网安备 11010802017518 粤B2-20090059-1\r\n\r\n扫描二维码\r\n\r\n\r\n返回顶部\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (20317, NULL, 'ask', 2, 1, NULL, '有BUG！重大BUG！生产全部崩溃拉@！', '  菜单腾讯云\r\n腾讯云首页\r\n备案控制台\r\n云+社区\r\n专栏问答沙龙团队主页开发者手册智能钛AI腾讯云大学TVP\r\n找文章 / 找答案 / 找技术大牛\r\n写文章提问登录注册\r\nDevOps时代\r\n385 篇文章 B 站基于大仓库的 CI/CD 及微服务实践	转到我的清单\r\n专栏首页DevOps时代的专栏B 站基于大仓库的 CI/CD 及微服务实践\r\n4\r\n1\r\n\r\n\r\nB 站基于大仓库的 CI/CD 及微服务实践\r\n2019-03-08阅读 1.1K0\r\n\r\n作者简介\r\n毛剑 B站 平台架构师&EP负责人\r\n\r\nAgenda\r\n我是在大概2015年的时候加入B站，之前是负责整个B站的后端，大概在2018年的时候转架构师，监管一个EP的团队。其实之前虽然没有做EP的一些事情，但是在转团队的时候，其实也进行了这样的实践。自己也有一些想法，如何快速交付、如何监管代码质量、如何测试等等。\r\n\r\n我的分享会分为三大块，首先什么是大仓库。\r\n\r\n这个东西是大概一两年前，我当时听别人一个分享，介绍的是他们把所有的代码放在仓库里面如何工作。后来我也看到一些文章包括一些论文，有一篇文章非常经典，叫做谷歌为什么把数十亿代码放在一个仓库，包括陆陆续续我发现有一些国外在硅谷创业的公司，都在做这方面的实战，我就在思考包括自己的一些痛点，后来就走到这个方向。\r\n\r\n第二块在实施工具链上的一些建设。\r\n\r\n第三个如何结合大仓库，做一些CI/CD。\r\n\r\n\r\n1. Mono-Repo\r\n首先介绍一下背景，2015年加入的时候，我们当时基于一个叫织梦（音），所以我们要做转型，包括引发一些开发人员在这个项目更好地迭代，因为当时的代码就是B站KFC全家桶，所有的代码都在里面。\r\n\r\n后来我们做微服务演进的时候，发现我们的基础库经常跟着我们的业务发展或者需求不断优化或者叠加。老实话来说，我们一开始做基础库的时候，或者我们的抽象不是很合理，或者破坏了一些原则等等。其实基础库都会频繁升级。\r\n\r\n我印象比较深，之前是靠管理手段推技术库，包括所有的分仓库的基础库的代码推进也好，其实都是靠管理手段。比如我在群里面，几月几号必须在几点钟把基础库全部升级，这次变更可能是破坏性的，意味着我们的业务代码可能也会跟着被破坏，这个其实是比较糟糕的体验。包括我自己，每天在群里面靠吼，这个是非常低效的。\r\n\r\n我当时管了大概有五六十个人，其实我每个同事的一些代码我都会关注。虽然有口号，但是流程是不统一的，基本也是靠每个组长去要求团队，但是整体不够自动化。\r\n\r\n第三点我们移动端，小bug非常多。我们大量测试的工作，积压在发版前，所以说大家其实一开始都是在憋大招，憋到最后要发版的时候，在上车前大家全部提测，这也是非常糟糕的。因为你没有一个持续的，测试的工作也是无法前进的，就导致交付的速度低下。\r\n\r\n最后一个问题版本管理非常复杂，包括后端相对来说还好，因为基础库相对统一以后，这个版本的1.0版本号，另外一个基础库的2.0非常复杂。我当时看的时候，一个超大的图，各种版本号，组件是不统一的，非常混乱。\r\n\r\n\r\n我们有一个B站的评论模块，一个评论组件，可能因为平台他在做这个需求的时候，没有考虑的那么周全，我一个业务使用的时候，发现你功能不齐，我是不是可以代码改一改，这种情况非常常见。这些代码分散在各个仓库里面，所以这种拷贝代码的情况非常多。\r\n\r\n所以我们交付到安卓渠道的时候，因为只有一个包，你要把所有代码合成打一个包，所以他的量是非常大的。这些都是我们在这两三年的过程中遇到的问题。所以我们后来引入了Mono-Repository，只有单一产品的仓库包含了多个基础库，应用等等。我们是把所有的代码托管到叫平台的一个库，我们取了一个名字叫做Kratos。\r\n\r\n\r\n2. Mono-Repository Toolchain\r\nMono-Repository 优势\r\n说一下为什么转型到大仓库，有哪些优势？我们一一讲一下。\r\n\r\n首先第一个觉得比较爽的，有一个一致的版本。以前我们基础库可能1.0、2.0，非常烦，每次不同的业务要发布的时候，都要依赖不同的版本号，这都是比较麻烦的。使用大仓以后，第一个体验就是一致的版本，我们基础库的升级，版本是通透透明可见的，版本是一致的。\r\n\r\n间接的我们的代码始终保持先进性。为什么这么说？比方说我的基础库从1.0迭代到2.0，如果说只能靠行政手段去吼，我的架包到2.0，你去申请一下。其实对业务方来说，他其实是没有动力的。一般都会有所谓的变更管理的思路，我就不改，但是你必须要保证我的兼容性。\r\n\r\n第二个就是极致的代码复用，代码拷来拷去，非常混乱。我们现在合完大仓以后，如果一个团队想要依赖另外一个团队代码，其实就是跨目录的依赖，没有所谓的用某个jar包几点零，这个是比较麻烦的。\r\n\r\n如果我有一个好多的仓库，对于一个新人来说，就像一个大城市一样，他进去以后找不到他在哪里。\r\n\r\n目前我们一个新同学入职以后，只要开一个仓库的权限，他所有的东西都可以浏览到，这个其实是非常简单的。我们另外一些同事，可能要开发基础功能的时候，也会倾向先在大仓库里面找有没有已经存在的功能。\r\n\r\n第三个点简单的依赖管理，怎么讲？我们构建系统，可以轻松地在目录之间挂上代码，整个依赖非常简单。这里面还有些特殊，因为我们可能还会引用一些第三方的开源库，我们现在也是在尝试像go 1.1的功能，目前我们是把第三方的库，使用版本号下载下来，再提交到大仓库里面。\r\n\r\n还有一个优势会简单的依赖管理，我以前也经常遇到过移动端的同事。比如说A这个库会依赖B和C，B和C再依赖D。我们发现有可能出现依赖D的库会有两个版本，这两个版本可能是不兼容的，包括服务端其实也遇到过。比方说卡夫卡有一次升级，他代码就做了一些破坏性的变更。这个时候我们要升级的话，其实就比较难推动的了，有些人用的比较老，有些人用的比较新，类似这样的。\r\n\r\n当然对于我们自己的组建库来说也是一样的，有些人用的新的，有些人用的老的，引入第三方的库，在编的时候其实就没有办法处理了，这个时候就要做一些取舍。我们移动端因为分仓库开发了，每个业务线在自己的仓库下开发，一开始使用的平台公共组建，有些人是1.0，有些人是1.1，这个时候在合包的时候也容易出错。\r\n\r\n最终合入总包的时候，也会导致一些库的变更，又要重新测，这也是得不偿失的。\r\n\r\n我们发现在其他语言或者是，比方说以go为例子，为什么会比较推崇静态连接方式？因为你相当于交付二进制，其实我觉得思路上是和大仓库的思路一致的，就是我把所有东西自我包含，我就可以很简单地交付出去。所以他是可以简单的依赖管理。\r\n\r\n\r\n\r\n我们看一下还有一个他有一个原子化的代码更改，我们开发人员在一致的操作中，原子化的操作中，可以对代码库里的数百甚至数千的文件进行重大更改。\r\n\r\n比如我们包的名字处理不是特别好，假如我是在分开的仓库中，我要把包名改一下，我们会把这一次变更为什么这样做，涉及的影响会是什么，由谁破坏他的，谁就要修复他，我们用这种思路引导所有人配合技术部的迭代和升级。\r\n\r\n\r\n还有更好的支撑大规模代码库的重构和更新，我在单一的代码库里面可以捕获所有的依赖关系，我可以大胆地删除API。我们在一个目录迁移的时候，就做了一个计划。\r\n\r\n首先叫大仓库一键包装，把包名的路径改了，第二个保留老的代码一个月。有些人因为是分支开发，有些老的主干时间特别久，所以我们把老的保留时间长一点，一个月。\r\n\r\n一个月以后我们会把老的代码标记为过期，合入的时候会告诉他这是过期的不可以合入。这样的话就可以完成基础库的迭代和更新。\r\n\r\n\r\n灵活的团队界限以及代码归属权。首先代码库里面，一般会有业务的名字或者部门的名字，我们其实要使用别人的API非常简单，我只要找到他的目录在哪里，就能看到他所有的API，我就可以非常简单地使用他的API。\r\n\r\n包括有一些业务，因为组织结构在调整，团队经常变更，其实只要做目录的操作，就可以从一个部门划到另外一个部门。\r\n\r\n\r\n团队之间的更好合作，由于代码库的结构，以前开发人员需要决定代码库的边界，比如我是开发分享组界，你是开发评论组界。现在不需要这种共享式的开发，因为现在非常方便了，我们只要把目录调整一下，各自的归属就可以变更了，所以说也是非常好合作的。\r\n\r\n\r\n另外最大化的代码透明度，以及自然而然的按团队划分命名空间。这个变成了你API的路径或者命名空间。比如我们内部主要使用GRPC，那我们API路径统一为什么？比如他是在一个应用，他是一个会员服务，他的API对应的是GRPC还是什么，他是一个V1版本。\r\n\r\n我们其实已经很少去使用文档，我记得以前对接的时候就是别人问我要请求什么接口，然后我就各种找，找到我自己的文档分给他，然后这个文档可能过段时间还忘记更新了，这个事件经常发生，最终可能有一些代码生成器之类的，保证我们的文档更新。\r\n\r\n这种工作模式，会导致一个开发人员频繁的上下楼切换，就是一种找文档、一种找代码。我们现在其实就是文档接代码，他也可以非常清楚地告诉你我这个接口是干什么的，里面有什么参数，都描述的非常清楚。也不会到处问了，基于我想要的东西，比如我想获得VIP的状态，我可能在整条代码仓库里面搜VIP这个文件我可能就能找到，也不用到处找文本了。\r\n\r\n\r\n2. Mono-Repository Toolchain\r\nMono-Repository 问题\r\n我们使用大仓库以后，虽然解决了一些问题，但是也带来一些问题。\r\n\r\n首先非常复杂的就是构建系统，早期的时候体验非常糟糕的，因为我那个时候是比较急切地引入这么一个思路，但是我们团队大概50多个人。在整体协作上其实非常困难，为什么？经常会出现某一个开发同学被默认到主干了，我们虽然会跟他说你提交代码的时候或者合并到主干的时候一定要点主干，他这个就是编辑全部。\r\n\r\n这个因为需要大量时间，我整个代码规模非常大，可能要花非常长的时间，就导致开发人员不愿意做这个事情。后来就想能不能集成到一个Gitlab的CI/CD里面，我们后面做了一些改进，我们先没有用那个Gitlab的CI/CD，而是我们基于Gitlab hook的API，我们做了一个事件的触发。我们当时的指令叫加默值，就会触发一个HOOK，这个hook会做什么？我们做了几件事情。\r\n\r\n首先我们用Gitlab的那个包，能把他的依赖关系整个原文件解析出来，我就知道他破了哪个包。把这些依赖关系，这些数据存到依赖的一个图，我们每一次在加默值这个操作触发以后，就会查这个依赖数，那么我就知道你哪些被依赖的需要被重新构建，所以我们就做了一个增量变异，我们当时其实是自己实践的。\r\n\r\n后来我们也发现越来越多的公司，包括后来我听facebook使用一个构建系统，我们就发现其实谷歌内部有一个叫Bazel的一个东西，我们后面就逐渐从自己模改的方式切换到Bazel。\r\n\r\n\r\n为什么我会去推进Bazel？我发现各个团队都有自己的语言，如果基于每一个语言做同样的事情其实成本会比较高。所以说我们后来发现Bazel其实可以跟语言结合的。\r\n\r\n你可以认为在每个目录里面有个bulid文件，这个bulid文件会把这个目录描述出来我依赖谁。那么通过这种方式，我就可以知道全局的依赖关系，他还有个好处，就是所有的构建方式是统一的，所有语言都支持。你只要实现自己语言的录入就行了。\r\n\r\n还有个好处，我们分析出他的依赖关系以后，其实就可以做一个增量变异。比如说我改了A库，A其实只有B在使用，我用那种增量变异的话，我只需要变异B，其他是不需要的。第二他有一个工具支持多个语言。\r\n\r\n第三就是他可扩展，像Bazel为什么会出来？就是因为谷歌内部也是一个超大仓库，这是第三点。第四你可以扩展他，因为你可以编写自己的，所以我们目前在IOS上的大仓实践做的还不错。\r\n\r\n\r\n大仓还有一个就是良好的目录结构和依赖规范，这个看起来很简单，实际我们在实践过程中，我自己包括我们团队都犯了很多错。\r\n\r\n现在可以简单看一下IOS的仓库有点类似像这个样子，他可能有多个包，还有各个基础库，还有第三方的依赖库。\r\n\r\n我们现在在go的仓库里面也会类似，有三个库，一个是第三方的库、基础库、APP，APP对后端来说像管理后台、微服务、网关等等一些模块。\r\n\r\n当我们写代码的时候，库与库之间的依赖关系处理不好的时候，你会发现改一个仓库，会导致整个仓库全变，你变异的缓存中间结果特别容易失效，就会导致每次都要重叠。\r\n\r\n我们为此修复了很长时间，各种各样的历史原因，比如发现某一些库被所有人使用，他可能会被经常破坏，你就要考虑是不是出现一些问题。还有就是CHANGELOG，简单的依赖环境。\r\n\r\n\r\n还有大仓另外一些问题，就是超高代码质量要求。我们之前犯过一些错，就是基础库一些小的变动，导致所有都受影响。\r\n\r\n假设你有一个bug被合流主干那么就会有风险，因此我们在大仓库以后，就更有理由或者要求我们的同学写更多的自测，包括代码规范，这个要求都是非常严格的。\r\n\r\n同时我们也会利用Bazel跑一个增量的UT。另外如果我们现在是全量的UT开发人员可能都出去玩了，我们也做了一个增量的UT。\r\n\r\n另外我们以前这种人肉的REVIEW，这种工具我们不仅仅引入了很多业界经常用的，我们还做了很多定制的开发，把这些库打到流程里面，变成一种强制的手段。\r\n\r\n\r\n刚刚说了我们即使有大量的UT，很多静态扫描工具，仍然避免不了我们犯错。所以我们同学非常喜欢写UT，即使是这样我们还是会出现一些bug。\r\n\r\n我们后来使用一个灰度机制，首先希望我们这次改动能够尽快合入主干，但是我不希望他立马生效，所以我们通过一个Feature Flags。\r\n\r\n比如下面有一个Feature gates，结合我们的paas平台，通过这种方式启用。当我们这种基础库的灰度三四天或者七天我们发现比较稳定的时候，才会把flags去掉。\r\n\r\n\r\n另外我们需要大量工具链的投入，比如我们的Bazel你是不是足够了解他，还有管理Bazel远程的缓存。\r\n\r\n另外代码托管，如果你的代码仓库超级大，是不是需要一个存储。或者如果你是一个超大仓库，你是不是需要一个IDE，这些都是你供需的投入，都需要时间和人力。另外你test-infra非常复杂的。另外重点强调一下CodeReview，我们很鼓励沟通的。\r\n\r\n\r\nCodeReview有几个好处，我自己感触比较深的首先他是可以保证代码质量的，第二他是人员的备份。我们鼓励跨团队，其实目前B站以前是一个部门内是跨组的Review，现在我们有跨部门的Review，其实是一个非常好的人员备份工具。当然任何一个人，其实你的代码好多人都读过，好多人都授信，任何人都可以补上来。\r\n\r\n另外就是说他是一个知识共享和教学工具，因为他是一个良性的吐槽别人代码写的不好，因为我去看你的代码，我经常会在下面说你这写的不好，那写的不好，其实我是有压力的。\r\n\r\n我自己就会说写的好点。那么我再看你的代码，因为你老喷我，所以我也会喷你，所以这种良性循环，会促使这个代码越写越好。另外还有一个非常好的是一个知识共享，可以发给不同的同事分享。\r\n\r\n像之前管理职责非常重，我也会看代码。因为有些新同学可能在某些点上，他可能写出了你自己没想到的一些亮点。另外我们通过CodeReview，强调的是每个人对自己代码一定要负责，不仅仅是你要写出来，你要对他的质量复杂。\r\n\r\n\r\n后面再讲一下CodeOwner，你对整个生命周期负责，没有运维，没有测试，所有人都是工程师。首先大仓放弃了对读权限，因为大仓基本上大家进去什么代码都能看到，所以他对读权限基本是放弃了，但是他是对写权限进行了一些微控制，你不是什么目录都可以随意破坏别人代码的。我们怎么做的呢？\r\n\r\n我当时想的比较简单，当时我就想是不是在每个目录放一个Owner文件描述一下，后来我才发现像谷歌内部好多项目都已经采用这种机制了。后来我看了一下别的代码，他也是加工的文件。可能有一些细节的差异，我们内部定义了三个角色，一个是Owner，第二谁来负责，第三是谁编写的。\r\n\r\n另外我们怎么去集成起来，后来我们使用Gitlab的一个to do。我们养成一个习惯，我们进界面里面，我们先点一下看我今天有什么工作要做，有点像腾讯的一个产品，不是每天在群里面吼。\r\n\r\n另外就是邮件，这也是沟通的方式，大家在邮件里面形成很长的对话。当然我们比较紧急的一些通知也会发送企业微信。因为我们刚说了通过一个加默值的指令，gitlab master这种属于比较紧急的机制，这个也需要有的。\r\n\r\n\r\n最后再讲一下还有一些比较复杂的问题，一个完整的持续集成，我是把他推崇的图拿出来的。首先我们有提交代码、发布代码，会有几个流程。\r\n\r\n我觉得比较好的首先Gitlab的CI/CD特别友好的UI。在我们讨论区，会提示你这一次的代码变更，我们会提示是这些人，这些信息都会增加 Gitlab todo里面。\r\n\r\n\r\n\r\n3. Mono-Repo CI/CD\r\n还有一个非常重要的一点，我见过无数公司做了好多CI/CD的系统，都是脱离开发场景。为什么这么说？我们非常鼓励只在一个平台做所有的事情，因为你不需要切各种各样的系统，因为这些都是有成本的，而且会导致一个开发人员不断切换，特别麻烦。所有的CI/CD流程都不应该被定制，而是说自由发挥。\r\n\r\n我一开始不是特别理解为什么喜欢这种方式，后来想想因为在谷歌内部，所有人都是工程师，都可以使用代码。所以我觉得这是非常好的，包括大家有没有发现一些文件都是偏声明式的描述，本质上是希望自我都可以去描述的。\r\n\r\n\r\n另外我们做的一个hook的插件，这个插件解释每个目录的一些信息。比方说这个目录需要谁来，我们这里有个小箭头，可以点赞，在Gitlab上只要点个赞，只要拿到以后我们就知道，那么这个就被合并到主干了。\r\n\r\n我们在使用CodeOwner的时候也会发现一些问题，首先我们不是技术型的专家，非常难维护。还有他的CodeOwner基本不需要装什么东西，我们把所有变异的环境全部做成了容器。所以我们所有语言变异的环境，全部是有镜像（音）的。我们后来越来越鼓励你自己制作镜像，我们内部也会有一个私有的，你可以自己去构建你的环境。\r\n\r\n\r\n我们后来发现GitlabCI/CD有什么问题呢？第一个是分支亲缘性调度，你需要不断拖代码，这些文件因为都很小，他要发好多次网络请求。还有我们需要更进一步的抽象CI/CD。\r\n\r\n\r\n后来我们发现其实K8S有一个Prow，目前我们也是逐步往这个方向演进。\r\n\r\n\r\n这是一个Prow的一个架构，他其实多了一层抽象，除了hook抽象出来以后，他又单独出了一个模块。目前我们已经跟Prow官方沟通了，所以目前做了很多Gitlab的一些代码的植入，这个我们也是持续地跟官方在沟通。时间关系这个图简单来说就是分为调度、分为处理任务等等。\r\n\r\n\r\n\r\n我们还有一个非常有意思的话题，我们后来发现他里面有一个叫Helm的工具。因为UT覆盖率很高，基础库不用说，但是业务代码真正做好UT是非常困难的。我们依赖的中间件越来越多，其实非常复杂，你要把所有的引擎全部代码化，我觉得非常复杂，而且有各种各样的语言。\r\n\r\n所以我们一开始在想自己造一个东西，后来发现有点傻，工作量非常大，是不是可以把他容器化掉。所以我们数据操作层，他依赖的资源，我们也是上容器的。\r\n\r\n我们依赖一个物理机，你跑进去数据放进去了，如果你不清理非常麻烦。helm就是帮你管理这些镜像，帮助你升级，他也是自描述的文件表示，他依赖什么版本，应该在什么时候被启动，我觉得这是非常好用的。\r\n\r\n\r\n我们在合代码的时候，因为只有一个主干，其他都是分支代码。在合的时候，首先一定要通过第一个合完以后，进主干的代码要重新跑一遍Pipeline，因为有可能会失败。只跑一次Pipeline，包括集成测试也是跑一次。这样的话后来我看了一个风险数据，他以前一天只能合可能几个或者十几个，他现在一天可以合几十个了。\r\n\r\n\r\n\r\n\r\n欢迎加入哔哩哔哩的工程效率团队，大家可以扫我。B站工程团队比较有意思，因为我本来是做业务以及做其他架构师的，我们公司也非常重视工程效率。\r\n\r\n本文为毛剑老师在 GOPS 2018 · 上海站的分享，经毛剑老师审核授权发布。\r\n\r\n本文分享自微信公众号 - DevOps时代（DevOpsTimes）\r\n\r\n原文出处及转载信息见文内详细说明，如有侵权，请联系 yunjia_community@tencent.com 删除。\r\n\r\n原始发表时间：2019-02-15\r\n\r\n本文参与腾讯云自媒体分享计划，欢迎正在阅读的你也加入，一起分享。\r\n\r\n举报\r\n点赞 4分享\r\n我来说两句\r\n0 条评论\r\n登录 后参与评论\r\n相关文章\r\nDevOps 助力企业互联网 + 转型落地\r\n主持人：很多企业一直探索如何互联网化，如何上云，接下来的老师是来自北京睿至大数据解决方案总监叫郑伟，给我们带来DevOps是如何助力企业互联网+的转型落地。\r\n\r\nDevOps时代\r\n评审的艺术 — 谈谈现实中的代码评审\r\n曾经写过一点关于代码评审（code review）的文章，比如这篇和这篇，现在觉得关于它的认识又有了不少更新。软件工程的技术和实践分成两部分，一部分是和书本知识...\r\n\r\nDevOps时代\r\n评审的艺术——谈谈现实中的代码评审\r\n曾经写过一点关于代码评审（code review）的文章，比如这篇和这篇，现在觉得关于它的认识又有了不少更新。软件工程的技术和实践分成两部分，一部分是和书本知识...\r\n\r\nDevOps时代\r\nB 站基于大仓库的 CI/CD 及微服务实践\r\n我是在大概2015年的时候加入B站，之前是负责整个B站的后端，大概在2018年的时候转架构师，监管一个EP的团队。其实之前虽然没有做EP的一些事情，但是在转团队...\r\n\r\nCriss@陈磊\r\n为你的Jupyter Notebooks注入一剂强心针\r\nJupyter Notebooks是当今世界上最热门的Pythonistas编程环境，特别是对于那些热衷于机器学习和数据科学的人。几个月前，当我开始认真对待机器...\r\n\r\nAiTechYun\r\n从零到部署：用 Vue 和 Express 实现迷你全栈电商应用（二）\r\n我们在平时所用到的一些网站、App，它们会将我们的数据进行保存，当我们关闭这些网站或者 App 后，下次打开还能看到我们之前的一些文字、视频记录。在迷你全栈电商...\r\n\r\n一只图雀\r\npython的几种常用安装包的方式\r\n打开windows命令行，不需要输入“python”或输入”python3”，而是直接输入以下指令。我们默认系统环境变量已经按照安装位置设置好。 一般安装之...\r\n\r\npy3study\r\nTensorFlow技术主管详解：Google是怎样管理开源软件的\r\n唐旭 编译自 O’reilly 量子位 出品 | 公众号 QbitAI TensorFlow开源一年半以来，在GitHub上已经有了820位贡献者，close了...\r\n\r\n量子位\r\nPython-pip的安装与使用\r\n我们都知道python有很多的第三方库或者说是模块。这些库针对不同的应用，发挥不同的作用。我们在实际的项目中肯定会用到这些模块。那如何将这些模块导入到自己的项目...\r\n\r\n汤贤\r\npython虚拟环境virualenv的安装与使用\r\nvirtualenv 是一个创建隔绝的Python环境的工具。virtualenv创建一个包含所有必要的可执行文件的文件夹，用来使用Python工程所需的包。...\r\n\r\n小小科\r\n更多文章\r\n作者介绍\r\nDevOps时代\r\n关注专栏\r\n文章\r\n385\r\n阅读量\r\n196.1K\r\n获赞\r\n1.6K\r\n作者排名\r\n234\r\n精选专题\r\n云计算新趋势\r\nServerless浪潮已来，如何稳坐潮头领先业界？\r\n活动推荐\r\n云+社区3周年庆\r\n领取周年庆大礼包\r\n立即领取\r\n腾讯云自媒体分享计划\r\n入驻云加社区，共享百万资源包。\r\n立即入驻\r\n运营活动\r\n活动名称广告关闭\r\n目录\r\nAgenda\r\n1. Mono-Repo\r\n2. Mono-Repository Toolchain\r\nMono-Repository 优势\r\n2. Mono-Repository Toolchain\r\nMono-Repository 问题\r\n3. Mono-Repo CI/CD\r\n社区\r\n专栏文章\r\n互动问答\r\n技术沙龙\r\n技术快讯\r\n团队主页\r\n开发者手册\r\n智能钛AI\r\n活动\r\n原创分享计划\r\n自媒体分享计划\r\n邀请作者入驻\r\n自荐上首页\r\n在线直播\r\n生态合作计划\r\n资源\r\n腾讯云大学\r\n技术周刊\r\n社区标签\r\n开发者实验室\r\n关于\r\n视频介绍\r\n社区规范\r\n免责声明\r\n联系我们\r\n云+社区\r\n\r\n扫码关注云+社区\r\n\r\n领取腾讯云代金券\r\n\r\n热门产品\r\n域名注册云服务器区块链服务消息队列网络加速云数据库域名解析云存储视频直播\r\n热门推荐\r\n人脸识别腾讯会议企业云CDN 加速视频通话图像分析MySQL 数据库SSL 证书语音识别\r\n更多推荐\r\n数据安全负载均衡短信文字识别云点播商标注册小程序开发网站监控数据迁移\r\nCopyright © 2013 - 2020 Tencent Cloud. All Rights Reserved. 腾讯云 版权所有 京公网安备 11010802017518 粤B2-20090059-1\r\n\r\n扫描二维码\r\n\r\n\r\n返回顶部\r\n', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:06:53', '2020-11-10 23:06:53');
INSERT INTO `gf_content` VALUES (20419, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (20420, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (20421, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (20422, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (20423, NULL, 'ask', 13, 1, NULL, '我要问问。。社区什么时候上线呀？', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:15', '2020-11-10 23:08:15');
INSERT INTO `gf_content` VALUES (20523, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (20524, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (20525, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (20526, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:08:35', '2020-11-10 23:08:35');
INSERT INTO `gf_content` VALUES (20527, NULL, 'ask', 14, 1, NULL, '我是VIP。。能不能给我手把手教学啊', ' ×\r\nCSDN首页\r\n博客\r\n学院\r\n下载\r\n论坛\r\n问答\r\n代码\r\n招聘\r\n电子书\r\nVIP会员 \r\nIDEA快捷搜索错误信息\r\n \r\n创作中心\r\n收藏\r\n消息\r\n登录/注册\r\nUbuntu16.04安装MySQL8.0\r\n\r\n溏心豆沙包 2018-07-10 11:42:43  8598  收藏 2\r\n文章标签： s\'d\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0.*.****_all.deb，使用\r\n\r\nsudo dpkg -i mysql-apt-config_0.*.****_all.deb\r\n\r\n安装执行，选择MySQL8.0，OK。\r\n\r\n然后apt update一下\r\n\r\n\r\n\r\n\r\n使用sudo apt install mysql-server命令，就会安装MySQL8.0\r\n\r\n\r\n\r\n\r\n\r\n按此方法会在安装过程中出现如下界面要求用户输入MySQL密码\r\n\r\n\r\n\r\nMySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。\r\n\r\n\r\n\r\n最后在终端输入mysql -u root -p命令并输入密码检查安装成功而且可以看到MySQL版本号为8.0！！\r\n\r\n\r\n\r\n\r\n\r\n点赞\r\n1\r\n\r\n评论\r\n6\r\n\r\n分享\r\n\r\n收藏\r\n2\r\n\r\n手机看\r\n\r\n关注\r\n一键三连\r\n\r\n点赞Mark关注该博主, 随时了解TA的最新博文\r\n\r\n阿里巴巴程序员整理推荐的Python笔记合集！建议白嫖！\r\n11-10\r\n交换变量值、将列表中的所有元素组成字符串、查找列表中频率最高的值\r\nUbuntu16.04 安装Mysql8.0\r\nweixin_41830049的博客\r\n 76\r\nUbuntu16.04 安装Mysql8.0 1.wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb 2.sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb 3.sudo apt-get update 4.sudo apt-get install mysql-server\r\n\r\n优质评论可以帮助作者获得更高权重\r\nweixin_43967679\r\njiachengren:能把 完整的 命令行步骤 发出来吗？谢谢3月前回复\r\n点赞\r\nweixin_42603379\r\n秋水锁钥:很详细 】1年前回复\r\n点赞\r\nweixin_42593850\r\n11:06:你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了1年前回复\r\n点赞\r\nliumingli3326\r\nliumingli3326回复: 选择重复后点击ok1年前回复\r\n点赞\r\nWRhan\r\nWRhan:搜了无数博客，就你这个解决了实际问题，巨详细。虚拟机环境，Ubuntu版本 18.04.2 LTS1年前回复\r\n点赞\r\ntwyth1214\r\n溏心豆沙包回复: 很高兴能帮到你，互相学习1年前回复\r\n点赞\r\n登录 查看 6 条热评\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\nllz56的博客\r\n 1059\r\nhttps://blog.csdn.net/PY0312/article/details/89481421\r\nUbuntu16.04.6下离线安装MySQL8.0版本\r\nqq_43250374的博客\r\n 597\r\n首先先去官网下载linux版本的mysql； mysql官网下载地址 按图选择，我的是Ubuntu16.04.6的。然后通过U盘；xftp等方式把压缩包上传到虚拟机内，然后解压 然后依次安装文件 sudo dpkg -i mysql-community-client-core_8.0.18-1ubuntu16.04_amd64.deb sudo dpkg -i mysql-common_8...\r\nUbuntu16.04 安装 MySQL8.0 详细步骤 以及 彻底卸载方法\r\n10-29\r\n接着如下图: 提示我们选择默认的加密方式, 由于 MySQL8.0采用了新的加密方式,这个新的加密方式可能会导致Ubuntu18.04用设置的root密码登录不了MySQL,或还会遇到在...\r\nUbuntu Server 16.04下MySQL 8.0的安装与配置_Zhenwen..._CSDN博客\r\n10-24\r\n1.从Mysql官网上下载安装文件。有两种方式可供选择: 使用APT安装方式安装 使用完整的安装包进行安装 sudo dpkg -i mysql-apt-config_0.8.6-1_all.deb ...\r\n[Ubuntu]Ubuntu16.04安装MySQL8.0\r\n一杯糖不加咖啡\r\n 73\r\n1.去http://dev.mysql.com/downloads/repo/apt/.下载一个mysql-apt-config_0..***_all.deb，使用 sudo dpkg -i mysql-apt-config_0..***_all.deb 安装执行，选择MySQL8.0，OK。 然后apt update一下 使用sudo apt install mysql-server命令，就会安装MySQL8.0 按此方法会在安装过程中出现如下界面要求用户输入MySQL密码 MySQL8.0采用了新\r\nUbuntu18.04安装Mysql 8.0.15\r\nqq_40871363的博客\r\n 2752\r\n版权声明：本文为博主原创文章，转载时请附上原文链接：https://blog.csdn.net/qq_40871363/article/details/88744010 Ubuntu18.04安装Mysql 8.0.15一、环境及说明二、安装过程（一）Step One: 进入官网下载mysql-apt-config_0.8.12-1_all.deb（二）Step Two: 移动至ubuntu（三...\r\nubuntu16.04下安装mysql详细步骤_小龙-CSDN博客\r\n10-24\r\n这里我只要接着记录一下如何在我们的云主机里安装mysql。因为一个服务器如果没有mysql,我感觉是没用的。不扯了,继续往看。。。\r\nUbuntu 安装 MySQL 8.0+_wm609972715的博客-CSDN博客\r\n11-3\r\nUbuntu 18.04 安装 MySQL 8.0 教程 下载MySQL配置文件,网址:https://dev.mysql.com/downloads/repo/apt/打开如下图: 打开后将下拉到网页底部点击Download按钮下...\r\nUbuntu16.04下安装MySQL8\r\nlawfree的博客\r\n 2960\r\nUbuntu16.04下安装MySQL8 1.输入命令: sudo apt-get install mysql-server mysql-client 2.在安装过程中会要求设置密码: New password for MySQL \"root\" user: #输入你设置的密码,并重复 3.安装完成后检查你的安装是否成功: $ sudo netstat -tap | grep mysql 表...\r\nUbuntu 18.04 apt安装MySQL8.0\r\nAdeCary的博客\r\n 1762\r\nUbuntu 18.04 apt安装MySQL8.0 到官网https://dev.mysql.com/downloads/repo/apt/下载mysql-apt-config_0.8.12-1_all.deb包 在 # 命令行执行 sudo apt-get update sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 出现如下图，并如图选择： ...\r\npoi操作Word创建超链接\r\ndiancao19790924的博客\r\n 1047\r\n项目引入poi： <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> <version>3.16</version> </dependency> <...\r\nCSDN开发助手，集成开发者常用工具，提升开发效率\r\n支持本地书签、tab页、历史记录搜索； 集成CSDN搜索结果； 他是一个时间转换工具； 他是一个计算器； 他是。。。，更多功能正在添加中\r\n五：在Ubuntu 16.04下安装MySQL\r\nJames_Nan的博客\r\n 2万+\r\n1，首先执行下面三条命令： 执行第一条命令： sudo apt-get install mysql-server 如下图： 输入 y ，下载安装时会出现要求设置密码的界面： 输入自己想设置的密码，之后再次输入确认密码。 完成之后如下图： 执行第二条命令： sudo apt-get install mysql-client 如下图： 接着执行第三条命令： sud...\r\n©️2020 CSDN 皮肤主题: 大白 设计师:CSDN官方博客 返回首页\r\n关于我们\r\n招贤纳士\r\n广告服务\r\n开发助手\r\n\r\nkefu@csdn.net\r\n\r\n客服论坛\r\n\r\n400-660-0108\r\n\r\n客服  8:30-22:00\r\n公安备案号11010502030143\r\n京ICP备19004658号\r\n京网文〔2020〕1039-165号\r\n经营性网站备案信息\r\n北京互联网违法和不良信息举报中心\r\n网络110报警服务\r\n中国互联网举报中心\r\n家长监护\r\nChrome商店下载\r\n©1999-2020北京创新乐知网络技术有限公司\r\n版权与免责声明\r\n版权申诉\r\n\r\n溏心豆沙包\r\n码龄11年\r\n 暂无认证\r\n9\r\n原创\r\n37万+\r\n周排名\r\n21万+\r\n总排名\r\n3万+\r\n访问\r\n\r\n等级\r\n416\r\n积分\r\n4\r\n粉丝\r\n1\r\n获赞\r\n6\r\n评论\r\n5\r\n收藏\r\n持之以恒\r\nTA的主页\r\n私信\r\n关注\r\n搜博主文章\r\n\r\n热门文章\r\nUbuntu16.04安装MySQL8.0  8590\r\nwindows生成git ssh密钥  7798\r\nlinux 当前用户提权 root  2829\r\nubuntu下apt-get彻底卸载mysql  1957\r\nlinux开启端口  1718\r\n分类专栏\r\n\r\n自动化测试\r\n10篇\r\n\r\ndocker\r\n3篇\r\n\r\nvue\r\n3篇\r\n最新评论\r\nUbuntu16.04安装MySQL8.0\r\njiachengren: 能把 完整的 命令行步骤 发出来吗？谢谢\r\n\r\nUbuntu16.04安装MySQL8.0\r\n溏心豆沙包 回复 WRhan: 很高兴能帮到你，互相学习\r\n\r\nUbuntu16.04安装MySQL8.0\r\nliumingli3326 回复 11:06: 选择重复后点击ok\r\n\r\nUbuntu16.04安装MySQL8.0\r\n秋水锁钥: 很详细 】\r\n\r\nUbuntu16.04安装MySQL8.0\r\n11:06: 你好，我直接运行那个下载的文件后，在黑窗口里面会弹出一个选择版本的选项，但就是没办法继续进行了\r\n\r\n最新文章\r\njenkins发布项目到远程主机上，配置两台linux如何使用SSH免密码登录\r\nlinux上安装tomcat\r\nlinux 上安装node(8.4.0)\r\n2020年4篇2019年6篇2018年14篇\r\n\r\nAds by FatChilli\r\n\r\n\r\n\r\n举报', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 23:08:35', '2021-01-01 22:43:40');
INSERT INTO `gf_content` VALUES (20627, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (20628, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (20629, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (20630, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:23', '2020-11-10 23:11:23');
INSERT INTO `gf_content` VALUES (20631, NULL, 'topic', 1, 1, NULL, '随便聊聊。。你们喜欢这个社区版本吗？', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 23:11:23', '2021-01-01 22:43:54');
INSERT INTO `gf_content` VALUES (20680, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (20681, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (20682, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (20683, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (20684, NULL, 'topic', 7, 1, NULL, '分享。。GoFrame发布社区项目啦，大家快来围观！', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:11:53', '2020-11-10 23:11:53');
INSERT INTO `gf_content` VALUES (20733, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (20734, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (20735, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (20736, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (20737, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', ' \r\n输入搜索关键字...\r\n\r\n框架介绍\r\n加入我们\r\nGF工具链\r\n准备工作\r\n快速开始(更新中)\r\n代码质量\r\n项目部署\r\nWEB服务开发\r\n开始使用\r\n路由注册\r\n请求输入\r\n请求输出\r\nCookie\r\nSession\r\n配置管理\r\n错误处理\r\nHTTP客户端\r\n基本介绍\r\n链式操作\r\n使用示例\r\n基本使用\r\n文件上传\r\n自定义Cookie\r\n自定义Header\r\n代理Proxy设置\r\n请求信息打印\r\n分页管理\r\nWEB开发进阶\r\nWEB开发高级\r\n网络服务开发\r\n常用开发模块\r\n对象管理\r\n调试模式\r\n配置管理\r\n资源管理\r\n错误处理\r\n日志管理\r\n类型转换\r\n数据校验\r\n缓存管理\r\n模板引擎\r\n数据库ORM\r\nNoSQL Redis\r\n功能模块列表\r\n框架学习教程\r\n框架开发案例\r\n版本发布记录\r\nFAQ常见问题\r\n文件上传\r\nGF支持非常方便的表单文件上传功能，并且HTTP客户端对上传功能进行了必要的封装并极大简化了上传功能调用。\r\n\r\n注意哦：上传文件大小受到ghttp.Server的ClientMaxBodySize配置影响：https://godoc.org/github.com/gogf/gf/net/ghttp#ServerConfig 默认支持的上传文件大小为8MB。\r\n\r\n服务端\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/server.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"github.com/gogf/gf/frame/g\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n)\r\n\r\n// Upload uploads files to /tmp .\r\nfunc Upload(r *ghttp.Request) {\r\n    files := r.GetUploadFiles(\"upload-file\")\r\n    names, err := files.Save(\"/tmp/\")\r\n    if err != nil {\r\n        r.Response.WriteExit(err)\r\n    }\r\n    r.Response.WriteExit(\"upload successfully: \", names)\r\n}\r\n\r\n// UploadShow shows uploading simgle file page.\r\nfunc UploadShow(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload File Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\n// UploadShowBatch shows uploading multiple files page.\r\nfunc UploadShowBatch(r *ghttp.Request) {\r\n    r.Response.Write(`\r\n    <html>\r\n    <head>\r\n        <title>GF Upload Files Demo</title>\r\n    </head>\r\n        <body>\r\n            <form enctype=\"multipart/form-data\" action=\"/upload\" method=\"post\">\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"file\" name=\"upload-file\" />\r\n                <input type=\"submit\" value=\"upload\" />\r\n            </form>\r\n        </body>\r\n    </html>\r\n    `)\r\n}\r\n\r\nfunc main() {\r\n    s := g.Server()\r\n    s.Group(\"/upload\", func(group *ghttp.RouterGroup) {\r\n        group.POST(\"/\", Upload)\r\n        group.ALL(\"/show\", UploadShow)\r\n        group.ALL(\"/batch\", UploadShowBatch)\r\n    })\r\n    s.SetPort(8199)\r\n    s.Run()\r\n}\r\n该服务端提供了3个接口：\r\n\r\nhttp://127.0.0.1:8199/upload/show 地址用于展示单个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload/batch 地址用于展示多个文件上传的H5页面；\r\nhttp://127.0.0.1:8199/upload 接口用于真实的表单文件上传，该接口同时支持单个文件或者多个文件上传；\r\n我们这里访问 http://127.0.0.1:8199/upload/show 选择需要上传的单个文件，提交之后可以看到文件上传成功到服务器上。\r\n\r\n关键代码说明\r\n\r\n我们在服务端可以通过r.GetUploadFiles方法获得上传的所有文件对象，也可以通过r.GetUploadFile获取单个上传的文件对象。\r\n在r.GetUploadFiles(\"upload-file\")中的参数\"upload-file\"为本示例中客户端上传时的表单文件域名称，开发者可以根据前后端约定在客户端中定义，以方便服务端接收表单文件域参数。\r\n通过files.Save可以将上传的多个文件方便地保存到指定的目录下，并返回保存成功的文件名。如果是批量保存，只要任意一个文件保存失败，都将会立即返回错误。此外，Save方法的第二个参数支持随机自动命名上传文件。\r\n通过group.POST(\"/\", Upload)注册的路由仅支持POST方式访问。\r\n客户端\r\n单文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path := \"/home/john/Workspace/Go/github.com/gogf/gf/version.go\"\r\n    r, e := ghttp.Post(\"http://127.0.0.1:8199/upload\", \"upload-file=@file:\"+path)\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n注意到了吗？文件上传参数格式使用了 参数名=@file:文件路径 ，HTTP客户端将会自动解析文件路径对应的文件内容并读取提交给服务端。原本复杂的文件上传操作被gf进行了封装处理，用户只需要使用 @file:+文件路径 来构成参数值即可。其中，文件路径请使用本地文件绝对路径。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n多文件上传\r\nhttps://github.com/gogf/gf/blob/master/.example/net/ghttp/client/upload-batch/client.go\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/gogf/gf/net/ghttp\"\r\n    \"github.com/gogf/gf/os/glog\"\r\n)\r\n\r\nfunc main() {\r\n    path1 := \"/Users/john/Pictures/logo1.png\"\r\n    path2 := \"/Users/john/Pictures/logo2.png\"\r\n    r, e := ghttp.Post(\r\n        \"http://127.0.0.1:8199/upload\",\r\n        fmt.Sprintf(`upload-file=@file:%s&upload-file=@file:%s`, path1, path2),\r\n    )\r\n    if e != nil {\r\n        glog.Error(e)\r\n    } else {\r\n        fmt.Println(string(r.ReadAll()))\r\n        r.Close()\r\n    }\r\n}\r\n可以看到，多个文件上传提交参数格式为参数名=@file:xxx&参数名=@file:xxx...，也可以使用参数名[]=@file:xxx&参数名[]=@file:xxx...的形式。\r\n\r\n首先运行服务端程序之后，我们再运行这个上传客户端（注意修改上传的文件路径为本地真实文件路径），执行后可以看到文件被成功上传到服务器的指定路径下。\r\n\r\n自定义上传文件名称\r\n很简单，修改FileName属性即可。\r\n\r\ns := g.Server()\r\ns.BindHandler(\"/upload\", func(r *ghttp.Request) {\r\n    file := r.GetUploadFile(\"TestFile\")\r\n    if file == nil {\r\n        r.Response.Write(\"empty file\")\r\n        return\r\n    }\r\n    file.Filename = \"MyCustomFileName.txt\"\r\n    fileName, err := file.Save(gfile.TempDir())\r\n    if err != nil {\r\n        r.Response.Write(err)\r\n        return\r\n    }\r\n    r.Response.Write(fileName)\r\n})\r\ns.SetPort(8999)\r\ns.Run()\r\n上一节：基本使用下一节：自定义Cookie\r\nPowered by GoFrame v1.9.3', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 23:12:15', '2020-11-10 23:12:15');
INSERT INTO `gf_content` VALUES (20783, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架。 实现了比较完善的基础设施建设以及开发工具链，提供了常用的基础开发模块， 如：缓存、日志、队列、数组、集合、容器、定时器、命令行、内存锁、对象池、 配置管理、资源管理、数据校验、数据编码、定时任务、数据库ORM、TCP/UDP组件、进程管理/通信等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、模板引擎等等， 支持热重启、热更新、域名绑定、TLS/HTTPS、Rewrite等特性。\r\n\r\n特点\r\n模块化、松耦合设计；\r\n模块丰富，开箱即用；\r\n简便易用，易于维护；\r\n社区活跃，大牛谦逊低调脾气好；\r\n高代码质量、高单元测试覆盖率；\r\n详尽的开发文档及示例；\r\n完善的本地中文化支持；\r\n更适合企业及团队使用；\r\n地址\r\n主库：https://github.com/gogf/gf\r\n码云：https://gitee.com/johng/gf\r\n安装\r\ngo get -u -v github.com/gogf/gf\r\n推荐使用 go.mod:\r\n\r\nrequire github.com/gogf/gf latest\r\n限制\r\ngolang版本 >= 1.11\r\n架构\r\n\r\n文档\r\n开发文档：https://goframe.org\r\n\r\n接口文档：https://godoc.org/github.com/gogf/gf', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 23:12:16', '2021-01-01 22:38:10');
INSERT INTO `gf_content` VALUES (20784, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架。 实现了比较完善的基础设施建设以及开发工具链，提供了常用的基础开发模块， 如：缓存、日志、队列、数组、集合、容器、定时器、命令行、内存锁、对象池、 配置管理、资源管理、数据校验、数据编码、定时任务、数据库ORM、TCP/UDP组件、进程管理/通信等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、模板引擎等等， 支持热重启、热更新、域名绑定、TLS/HTTPS、Rewrite等特性。\r\n\r\n特点\r\n模块化、松耦合设计；\r\n模块丰富，开箱即用；\r\n简便易用，易于维护；\r\n社区活跃，大牛谦逊低调脾气好；\r\n高代码质量、高单元测试覆盖率；\r\n详尽的开发文档及示例；\r\n完善的本地中文化支持；\r\n更适合企业及团队使用；\r\n地址\r\n主库：https://github.com/gogf/gf\r\n码云：https://gitee.com/johng/gf\r\n安装\r\ngo get -u -v github.com/gogf/gf\r\n推荐使用 go.mod:\r\n\r\nrequire github.com/gogf/gf latest\r\n限制\r\ngolang版本 >= 1.11\r\n架构\r\n\r\n文档\r\n开发文档：https://goframe.org\r\n\r\n接口文档：https://godoc.org/github.com/gogf/gf', 0, '', '', 'null', '', 0, NULL, 2, 0, 0, '2020-11-10 23:12:16', '2021-01-01 22:38:08');
INSERT INTO `gf_content` VALUES (20785, NULL, 'topic', 12, 1, NULL, '招聘GoFrame高级工程师，面议', 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架。 实现了比较完善的基础设施建设以及开发工具链，提供了常用的基础开发模块， 如：缓存、日志、队列、数组、集合、容器、定时器、命令行、内存锁、对象池、 配置管理、资源管理、数据校验、数据编码、定时任务、数据库ORM、TCP/UDP组件、进程管理/通信等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、模板引擎等等， 支持热重启、热更新、域名绑定、TLS/HTTPS、Rewrite等特性。\r\n\r\n特点\r\n模块化、松耦合设计；\r\n模块丰富，开箱即用；\r\n简便易用，易于维护；\r\n社区活跃，大牛谦逊低调脾气好；\r\n高代码质量、高单元测试覆盖率；\r\n详尽的开发文档及示例；\r\n完善的本地中文化支持；\r\n更适合企业及团队使用；\r\n地址\r\n主库：https://github.com/gogf/gf\r\n码云：https://gitee.com/johng/gf\r\n安装\r\ngo get -u -v github.com/gogf/gf\r\n推荐使用 go.mod:\r\n\r\nrequire github.com/gogf/gf latest\r\n限制\r\ngolang版本 >= 1.11\r\n架构\r\n\r\n文档\r\n开发文档：https://goframe.org\r\n\r\n接口文档：https://godoc.org/github.com/gogf/gf', 0, '', '', 'null', '', 0, NULL, 21, 0, 0, '2020-11-10 23:12:16', '2021-01-01 22:43:50');
INSERT INTO `gf_content` VALUES (20818, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架。 实现了比较完善的基础设施建设以及开发工具链，提供了常用的基础开发模块， 如：缓存、日志、队列、数组、集合、容器、定时器、命令行、内存锁、对象池、 配置管理、资源管理、数据校验、数据编码、定时任务、数据库ORM、TCP/UDP组件、进程管理/通信等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、模板引擎等等， 支持热重启、热更新、域名绑定、TLS/HTTPS、Rewrite等特性。\r\n\r\n特点\r\n模块化、松耦合设计；\r\n模块丰富，开箱即用；\r\n简便易用，易于维护；\r\n社区活跃，大牛谦逊低调脾气好；\r\n高代码质量、高单元测试覆盖率；\r\n详尽的开发文档及示例；\r\n完善的本地中文化支持；\r\n更适合企业及团队使用；\r\n地址\r\n主库：https://github.com/gogf/gf\r\n码云：https://gitee.com/johng/gf\r\n安装\r\ngo get -u -v github.com/gogf/gf\r\n推荐使用 go.mod:\r\n\r\nrequire github.com/gogf/gf latest\r\n限制\r\ngolang版本 >= 1.11\r\n架构\r\n\r\n文档\r\n开发文档：https://goframe.org\r\n\r\n接口文档：https://godoc.org/github.com/gogf/gf', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 09:59:18', '2021-01-01 22:43:48');
INSERT INTO `gf_content` VALUES (20819, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架。 实现了比较完善的基础设施建设以及开发工具链，提供了常用的基础开发模块， 如：缓存、日志、队列、数组、集合、容器、定时器、命令行、内存锁、对象池、 配置管理、资源管理、数据校验、数据编码、定时任务、数据库ORM、TCP/UDP组件、进程管理/通信等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、模板引擎等等， 支持热重启、热更新、域名绑定、TLS/HTTPS、Rewrite等特性。\r\n\r\n特点\r\n模块化、松耦合设计；\r\n模块丰富，开箱即用；\r\n简便易用，易于维护；\r\n社区活跃，大牛谦逊低调脾气好；\r\n高代码质量、高单元测试覆盖率；\r\n详尽的开发文档及示例；\r\n完善的本地中文化支持；\r\n更适合企业及团队使用；\r\n地址\r\n主库：https://github.com/gogf/gf\r\n码云：https://gitee.com/johng/gf\r\n安装\r\ngo get -u -v github.com/gogf/gf\r\n推荐使用 go.mod:\r\n\r\nrequire github.com/gogf/gf latest\r\n限制\r\ngolang版本 >= 1.11\r\n架构\r\n\r\n文档\r\n开发文档：https://goframe.org\r\n\r\n接口文档：https://godoc.org/github.com/gogf/gf', 0, '', '', 'null', '', 0, NULL, 0, 0, 0, '2020-11-10 10:00:43', '2020-11-10 11:17:04');
INSERT INTO `gf_content` VALUES (20820, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架。 实现了比较完善的基础设施建设以及开发工具链，提供了常用的基础开发模块， 如：缓存、日志、队列、数组、集合、容器、定时器、命令行、内存锁、对象池、 配置管理、资源管理、数据校验、数据编码、定时任务、数据库ORM、TCP/UDP组件、进程管理/通信等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、模板引擎等等， 支持热重启、热更新、域名绑定、TLS/HTTPS、Rewrite等特性。\r\n\r\n特点\r\n模块化、松耦合设计；\r\n模块丰富，开箱即用；\r\n简便易用，易于维护；\r\n社区活跃，大牛谦逊低调脾气好；\r\n高代码质量、高单元测试覆盖率；\r\n详尽的开发文档及示例；\r\n完善的本地中文化支持；\r\n更适合企业及团队使用；\r\n地址\r\n主库：https://github.com/gogf/gf\r\n码云：https://gitee.com/johng/gf\r\n安装\r\ngo get -u -v github.com/gogf/gf\r\n推荐使用 go.mod:\r\n\r\nrequire github.com/gogf/gf latest\r\n限制\r\ngolang版本 >= 1.11\r\n架构\r\n\r\n文档\r\n开发文档：https://goframe.org\r\n\r\n接口文档：https://godoc.org/github.com/gogf/gf', 0, '', '', 'null', '', 0, NULL, 1, 0, 0, '2020-11-10 10:01:52', '2021-01-01 22:53:02');
INSERT INTO `gf_content` VALUES (20821, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架。 实现了比较完善的基础设施建设以及开发工具链，提供了常用的基础开发模块， 如：缓存、日志、队列、数组、集合、容器、定时器、命令行、内存锁、对象池、 配置管理、资源管理、数据校验、数据编码、定时任务、数据库ORM、TCP/UDP组件、进程管理/通信等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、模板引擎等等， 支持热重启、热更新、域名绑定、TLS/HTTPS、Rewrite等特性。\r\n\r\n特点\r\n模块化、松耦合设计；\r\n模块丰富，开箱即用；\r\n简便易用，易于维护；\r\n社区活跃，大牛谦逊低调脾气好；\r\n高代码质量、高单元测试覆盖率；\r\n详尽的开发文档及示例；\r\n完善的本地中文化支持；\r\n更适合企业及团队使用；\r\n地址\r\n主库：https://github.com/gogf/gf\r\n码云：https://gitee.com/johng/gf\r\n安装\r\ngo get -u -v github.com/gogf/gf\r\n推荐使用 go.mod:\r\n\r\nrequire github.com/gogf/gf latest\r\n限制\r\ngolang版本 >= 1.11\r\n架构\r\n\r\n文档\r\n开发文档：https://goframe.org\r\n\r\n接口文档：https://godoc.org/github.com/gogf/gf', 0, '', '', 'null', '', 0, NULL, 5, 0, 0, '2020-11-10 10:02:15', '2021-01-01 22:53:35');
INSERT INTO `gf_content` VALUES (20822, NULL, 'topic', 6, 1, NULL, 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架', 'GF(Go Frame)是一款模块化、高性能、生产级的Go基础开发框架。 实现了比较完善的基础设施建设以及开发工具链，提供了常用的基础开发模块， 如：缓存、日志、队列、数组、集合、容器、定时器、命令行、内存锁、对象池、 配置管理、资源管理、数据校验、数据编码、定时任务、数据库ORM、TCP/UDP组件、进程管理/通信等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、模板引擎等等， 支持热重启、热更新、域名绑定、TLS/HTTPS、Rewrite等特性。\r\n\r\n特点\r\n模块化、松耦合设计；\r\n模块丰富，开箱即用；\r\n简便易用，易于维护；\r\n社区活跃，大牛谦逊低调脾气好；\r\n高代码质量、高单元测试覆盖率；\r\n详尽的开发文档及示例；\r\n完善的本地中文化支持；\r\n更适合企业及团队使用；\r\n地址\r\n主库：https://github.com/gogf/gf\r\n码云：https://gitee.com/johng/gf\r\n安装\r\ngo get -u -v github.com/gogf/gf\r\n推荐使用 go.mod:\r\n\r\nrequire github.com/gogf/gf latest\r\n限制\r\ngolang版本 >= 1.11\r\n架构\r\n\r\n文档\r\n开发文档：https://goframe.org\r\n\r\n接口文档：https://godoc.org/github.com/gogf/gf', 0, '', '', 'null', '', 0, NULL, 12, 0, 0, '2020-11-10 10:17:33', '2021-01-01 22:53:33');

-- ----------------------------
-- Table structure for gf_file
-- ----------------------------
DROP TABLE IF EXISTS `gf_file`;
CREATE TABLE `gf_file`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `name` varchar(45)  NULL DEFAULT NULL COMMENT '文件名称',
  `src` varchar(500)  NOT NULL COMMENT '本地文件存储路径',
  `url` varchar(500)  NULL DEFAULT NULL COMMENT 'URL地址，可能为空',
  `user_id` int(10) UNSIGNED NOT NULL COMMENT '操作用户',
  `created_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `user_id`(`user_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7  COMMENT = '文件列表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gf_file
-- ----------------------------
INSERT INTO `gf_file` VALUES (1, 'c6znge18hcbkv0i8ts.png', 'upload/20201110/c6znge18hcbkv0i8ts.png', '/upload/20201110/c6znge18hcbkv0i8ts.png', 1, '2020-11-10 22:22:45');
INSERT INTO `gf_file` VALUES (2, 'c6znjl77xng89hmlhg.png', 'upload/20201110/c6znjl77xng89hmlhg.png', '/upload/20201110/c6znjl77xng89hmlhg.png', 1, '2020-11-10 22:26:55');
INSERT INTO `gf_file` VALUES (3, 'c73j3oajspswdgqb1g.png', 'upload/20201115/c73j3oajspswdgqb1g.png', '/upload/20201115/c73j3oajspswdgqb1g.png', 10, '2020-11-15 11:48:44');
INSERT INTO `gf_file` VALUES (4, 'c73xron93lmguw4xrr.png', 'upload/20201115/c73xron93lmguw4xrr.png', '/upload/20201115/c73xron93lmguw4xrr.png', 12, '2020-11-15 23:18:21');
INSERT INTO `gf_file` VALUES (5, 'c75n1svi4mlsam1cdd.png', 'upload/20201117/c75n1svi4mlsam1cdd.png', '/upload/20201117/c75n1svi4mlsam1cdd.png', 15, '2020-11-17 23:19:41');
INSERT INTO `gf_file` VALUES (6, 'c7bhxgi4xbvc2owc1v.jpg', 'upload/20201124/c7bhxgi4xbvc2owc1v.jpg', '/upload/20201124/c7bhxgi4xbvc2owc1v.jpg', 16, '2020-11-24 20:34:55');

-- ----------------------------
-- Table structure for gf_interact
-- ----------------------------
DROP TABLE IF EXISTS `gf_interact`;
CREATE TABLE `gf_interact`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `type` tinyint(4) NOT NULL COMMENT '操作类型。0:赞，1:踩。',
  `user_id` int(10) UNSIGNED NOT NULL COMMENT '操作用户',
  `target_id` int(10) UNSIGNED NOT NULL COMMENT '对应内容ID，该内容可能是content, reply',
  `target_type` char(10)  NOT NULL COMMENT '内容模型: content, reply, 具体由程序定义',
  `count` int(10) UNSIGNED NULL DEFAULT NULL COMMENT '操作数据值',
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `unique`(`user_id`, `target_id`, `target_type`, `type`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 90  COMMENT = '交互管理表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gf_interact
-- ----------------------------
INSERT INTO `gf_interact` VALUES (69, 1, 15, 10803, 'content', 0, '2020-11-17 21:24:33', '2020-11-17 21:24:33');
INSERT INTO `gf_interact` VALUES (70, 0, 15, 46925, 'content', 0, '2020-11-18 22:03:31', '2020-11-18 22:03:31');
INSERT INTO `gf_interact` VALUES (75, 0, 17, 10803, 'content', 0, '2020-12-29 23:04:00', '2020-12-29 23:04:00');
INSERT INTO `gf_interact` VALUES (77, 0, 17, 174, 'content', 0, '2020-12-29 23:04:18', '2020-12-29 23:04:18');
INSERT INTO `gf_interact` VALUES (79, 1, 17, 174, 'content', 0, '2020-12-29 23:04:21', '2020-12-29 23:04:21');
INSERT INTO `gf_interact` VALUES (82, 1, 17, 10793, 'content', 0, '2020-12-30 01:09:10', '2020-12-30 01:09:10');
INSERT INTO `gf_interact` VALUES (83, 0, 17, 10793, 'content', 0, '2020-12-30 01:09:11', '2020-12-30 01:09:11');
INSERT INTO `gf_interact` VALUES (85, 0, 17, 10794, 'content', 0, '2020-12-30 01:09:19', '2020-12-30 01:09:19');
INSERT INTO `gf_interact` VALUES (87, 1, 17, 10803, 'content', 0, '2020-12-30 23:33:54', '2020-12-30 23:33:54');
INSERT INTO `gf_interact` VALUES (88, 0, 17, 10801, 'content', 0, '2020-12-30 23:33:58', '2020-12-30 23:33:58');
INSERT INTO `gf_interact` VALUES (89, 1, 17, 10801, 'content', 0, '2020-12-30 23:33:58', '2020-12-30 23:33:58');

-- ----------------------------
-- Table structure for gf_reply
-- ----------------------------
DROP TABLE IF EXISTS `gf_reply`;
CREATE TABLE `gf_reply`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '回复ID',
  `parent_id` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '回复对应的上一级回复ID(没有的话默认为0)',
  `title` varchar(255)  NOT NULL COMMENT '回复标题',
  `content` mediumtext  NOT NULL COMMENT '回复内容',
  `target_type` char(10)  NOT NULL COMMENT '评论类型: content, reply',
  `target_id` int(10) UNSIGNED NOT NULL COMMENT '对应内容ID，可能回复的是另一个回复，所以这里没有使用content_id',
  `user_id` int(10) UNSIGNED NOT NULL COMMENT '网站用户ID',
  `zan_count` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '赞',
  `cai_count` int(10) UNSIGNED NULL DEFAULT 0 COMMENT '踩',
  `created_at` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `content_type_target_id`(`target_type`, `target_id`) USING BTREE,
  INDEX `user_id`(`user_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 34  COMMENT = '回复列表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gf_reply
-- ----------------------------
INSERT INTO `gf_reply` VALUES (32, 0, '', '<p>支持一下Goframe</p>\n', 'topic', 10785, 1, 0, 0, '2021-01-01 22:40:27', '2021-01-01 22:40:27');
INSERT INTO `gf_reply` VALUES (33, 0, '', '<p>支持一下GoFrame</p>\n', 'topic', 20822, 1, 0, 0, '2021-01-01 22:44:13', '2021-01-01 22:44:13');

-- ----------------------------
-- Table structure for gf_setting
-- ----------------------------
DROP TABLE IF EXISTS `gf_setting`;
CREATE TABLE `gf_setting`  (
  `k` char(45)  NOT NULL COMMENT '键名',
  `v` varchar(9000)  NOT NULL COMMENT '键值',
  `created_at` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `updated_at` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`k`) USING BTREE
) ENGINE = InnoDB  COMMENT = '键值对设置表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gf_setting
-- ----------------------------
INSERT INTO `gf_setting` VALUES ('TopMenus', '[{\"name\":\"首页\",\"url\":\"/\",\"target\":\"\",\"items\":null},{\"name\":\"主题\",\"url\":\"/topic\",\"target\":\"\",\"items\":null},{\"name\":\"问答\",\"url\":\"/ask\",\"target\":\"\",\"items\":null},{\"name\":\"文章\",\"url\":\"/article\",\"target\":\"\",\"items\":null},{\"name\":\"教程\",\"url\":\"#\",\"target\":\"\",\"items\":[{\"name\":\"GoFrame源码\",\"url\":\"https://github.com/gogf/gf\",\"target\":\"_blank\",\"items\":null},{\"name\":\"GoFrame官网\",\"url\":\"https://goframe.org\",\"target\":\"_blank\",\"items\":null},{\"name\":\"GoFrame教程\",\"url\":\"https://github.com/gogf/gf\",\"target\":\"_blank\",\"items\":null}]}]', '2020-11-11 23:11:30', '2020-11-11 23:13:03');

-- ----------------------------
-- Table structure for gf_user
-- ----------------------------
DROP TABLE IF EXISTS `gf_user`;
CREATE TABLE `gf_user`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'UID',
  `passport` varchar(45)  NOT NULL COMMENT '账号',
  `password` char(32)  NOT NULL COMMENT 'MD5密码',
  `nickname` varchar(45)  NULL DEFAULT NULL COMMENT '昵称',
  `avatar` varchar(200)  NULL DEFAULT NULL COMMENT '头像地址',
  `status` tinyint(4) NULL DEFAULT 1 COMMENT '状态 0:启用 1:禁用',
  `gender` tinyint(1) NULL DEFAULT 0 COMMENT '性别 0: 未设置 1: 男 2: 女',
  `created_at` datetime(0) NULL DEFAULT NULL COMMENT '注册时间',
  `updated_at` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uni_user_passport`(`passport`) USING BTREE,
  UNIQUE INDEX `uni_user_nickname`(`nickname`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 18  COMMENT = '用户基础表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gf_user
-- ----------------------------
INSERT INTO `gf_user` VALUES (1, 'goframe', 'b741a2d80cc7320cccc56303cf0fba0a', 'goframe', 'https://i.loli.net/2020/06/13/4XaPUnEjpeVGfzt.jpg', 1, 0, '2020-06-03 21:04:11', '2020-06-13 21:20:59');
INSERT INTO `gf_user` VALUES (5, 'john@johng.cn', '9126441528298fbf866b5bd7d5532179', '老衲画个圆', 'https://avatars2.githubusercontent.com/u/26347176?v=4', 1, 0, '2020-11-12 23:34:40', '2020-11-12 23:34:40');
INSERT INTO `gf_user` VALUES (6, 'nantish', '7f89d734b3046cee39db060b04849799', 'NantishGuo', 'https://avatars2.githubusercontent.com/u/26347176?v=4', 1, 0, '2020-11-14 21:36:46', '2020-11-14 21:36:46');

SET FOREIGN_KEY_CHECKS = 1;
